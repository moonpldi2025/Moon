Array.newInstance;char[];sun.invoke.util.BytecodeDescriptor.parseSig;90;;
Array.newInstance;int[];sun.invoke.util.BytecodeDescriptor.parseSig;90;;
Array.newInstance;java.lang.Class[];java.util.AbstractCollection.toArray;179;;
Array.newInstance;java.lang.Class[];java.util.Arrays.copyOf;3212;;
Array.newInstance;java.lang.Class[];java.util.Arrays.copyOfRange;3484;;
Array.newInstance;java.lang.Class[];sun.invoke.util.BytecodeDescriptor.parseSig;90;;
Array.newInstance;java.lang.Object[];sun.invoke.util.BytecodeDescriptor.parseSig;90;;
Array.newInstance;java.lang.String[];java.util.AbstractCollection.toArray;179;;
Array.newInstance;java.lang.invoke.LambdaForm$BasicType[];java.util.Arrays.copyOf;3212;;
Array.newInstance;java.lang.invoke.LambdaForm$BasicType[];sun.invoke.util.BytecodeDescriptor.parseSig;90;;
Array.newInstance;java.lang.invoke.LambdaForm$Name[];java.util.Arrays.copyOf;3212;;
Array.newInstance;java.lang.invoke.LambdaForm$Name[];sun.invoke.util.BytecodeDescriptor.parseSig;90;;
Array.newInstance;java.lang.invoke.MethodHandle[];java.util.Arrays.copyOf;3212;;
Class.forName;sun.net.www.protocol.jar.Handler;java.net.URL.getURLStreamHandler;1223;;
Class.getDeclaredField;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$CounterCell: long value>;com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8.<clinit>;4114;isAccessible=false;
Class.getDeclaredField;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int cellsBusy>;com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8.<clinit>;4111;isAccessible=false;
Class.getDeclaredField;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int sizeCtl>;com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8.<clinit>;4103;isAccessible=false;
Class.getDeclaredField;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int transferIndex>;com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8.<clinit>;4105;isAccessible=false;
Class.getDeclaredField;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int transferOrigin>;com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8.<clinit>;4107;isAccessible=false;
Class.getDeclaredField;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: long baseCount>;com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8.<clinit>;4109;isAccessible=false;
Class.getDeclaredField;<java.lang.invoke.BoundMethodHandle$Species_L3: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;java.lang.invoke.BoundMethodHandle$Factory.setSpeciesDataToConcreteBMHClass;790;isAccessible=false;
Class.getDeclaredField;<java.lang.invoke.BoundMethodHandle$Species_L4: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;java.lang.invoke.BoundMethodHandle$Factory.setSpeciesDataToConcreteBMHClass;790;isAccessible=false;
Class.getDeclaredField;<java.lang.invoke.BoundMethodHandle$Species_LL: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;java.lang.invoke.BoundMethodHandle$Factory.setSpeciesDataToConcreteBMHClass;790;isAccessible=false;
Class.getDeclaredField;<java.lang.invoke.CallSite: java.lang.invoke.MethodHandle target>;java.lang.invoke.CallSite.<clinit>;252;isAccessible=false;
Class.getDeclaredField;<java.lang.invoke.MethodHandle: java.lang.invoke.LambdaForm form>;java.lang.invoke.MethodHandle.<clinit>;1451;isAccessible=false;
Class.getDeclaredField;<java.lang.invoke.MethodType: java.lang.Class rtype>;java.lang.invoke.MethodType.<clinit>;1167;isAccessible=false;
Class.getDeclaredField;<java.lang.invoke.MethodType: java.lang.Class[] ptypes>;java.lang.invoke.MethodType.<clinit>;1169;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.ConcurrentLinkedQueue$Node: java.lang.Object item>;java.util.concurrent.ConcurrentLinkedQueue$Node.<clinit>;215;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.ConcurrentLinkedQueue$Node: java.util.concurrent.ConcurrentLinkedQueue$Node next>;java.util.concurrent.ConcurrentLinkedQueue$Node.<clinit>;217;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node head>;java.util.concurrent.ConcurrentLinkedQueue.<clinit>;941;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node tail>;java.util.concurrent.ConcurrentLinkedQueue.<clinit>;943;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.CopyOnWriteArrayList: java.util.concurrent.locks.ReentrantLock lock>;java.util.concurrent.CopyOnWriteArrayList.<clinit>;1687;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.atomic.AtomicBoolean: int value>;java.util.concurrent.atomic.AtomicBoolean.<clinit>;59;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.atomic.AtomicReference: java.lang.Object value>;java.util.concurrent.atomic.AtomicReference.<clinit>;58;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: int waitStatus>;java.util.concurrent.locks.AbstractQueuedSynchronizer.<clinit>;2276;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node next>;java.util.concurrent.locks.AbstractQueuedSynchronizer.<clinit>;2278;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.locks.AbstractQueuedSynchronizer: int state>;java.util.concurrent.locks.AbstractQueuedSynchronizer.<clinit>;2270;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node head>;java.util.concurrent.locks.AbstractQueuedSynchronizer.<clinit>;2272;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node tail>;java.util.concurrent.locks.AbstractQueuedSynchronizer.<clinit>;2274;isAccessible=false;
Class.getDeclaredFields;sun.misc.Unsafe;com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$1.run;4144;;
Class.getDeclaredMethod;<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.MethodHandle getTarget()>;java.lang.invoke.DelegatingMethodHandle.<clinit>;159;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle$Interface: java.lang.Object checkReceiver(java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;722;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle: java.lang.Object allocateInstance(java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;718;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle: java.lang.Object checkBase(java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;710;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle: java.lang.Object checkCast(java.lang.Object,java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;716;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle: java.lang.Object constructorMethod(java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;720;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle: java.lang.Object internalMemberName(java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;702;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle: java.lang.Object internalMemberNameEnsureInit(java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;704;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle: java.lang.Object staticBase(java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;712;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle: long fieldOffset(java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;708;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle: long staticOffset(java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;714;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle: void ensureInitialized(java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;706;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.Invokers: java.lang.Object checkGenericType(java.lang.Object,java.lang.Object)>;java.lang.invoke.Invokers.<clinit>;425;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.Invokers: java.lang.Object getCallSiteTarget(java.lang.Object)>;java.lang.invoke.Invokers.<clinit>;427;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.Invokers: void checkCustomized(java.lang.Object)>;java.lang.invoke.Invokers.<clinit>;429;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.Invokers: void checkExactType(java.lang.Object,java.lang.Object)>;java.lang.invoke.Invokers.<clinit>;423;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.MethodHandleImpl: boolean profileBoolean(boolean,int[])>;java.lang.invoke.MethodHandleImpl$Lazy.<clinit>;618;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.MethodHandleImpl: java.lang.Object guardWithCatch(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle,java.lang.Object[])>;java.lang.invoke.MethodHandleImpl$Lazy.<clinit>;615;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.MethodHandleImpl: sun.invoke.empty.Empty throwException(java.lang.Throwable)>;java.lang.invoke.MethodHandleImpl$Lazy.<clinit>;617;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.MethodHandleImpl: void checkSpreadArgument(java.lang.Object,int)>;java.lang.invoke.MethodHandleImpl$Lazy.<clinit>;614;isAccessible=false;
Class.getMethod;<datadog.trace.agent.tooling.AgentCLI: void printIntegrationNames()>;datadog.trace.bootstrap.AgentJar.printIntegrationNames;118;isAccessible=false;
Class.getMethod;<datadog.trace.bootstrap.Agent: java.lang.Class installAgentCLI(java.net.URL)>;datadog.trace.bootstrap.AgentJar.installAgentCLI;128;isAccessible=false;
Class.getMethod;<datadog.trace.bootstrap.AgentBootstrap: void main(java.lang.String[])>;sun.launcher.LauncherHelper.validateMainClass;670;isAccessible=false;
Class.getMethod;<datadog.trace.logging.LogLevel: datadog.trace.logging.LogLevel[] values()>;java.lang.Class.getEnumConstantsShared;;isAccessible=false;
Class.newInstance;sun.net.www.protocol.jar.Handler;java.net.URL.getURLStreamHandler;1232;;
Constructor.getModifiers;<sun.net.www.protocol.jar.Handler: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<datadog.exceptions.instrumentation.ThrowableInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.agent.tooling.bytebuddy.matcher.ClassLoaderMatchers$$Lambda$9.1262822392: void <init>()>;java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite;215;isAccessible=true;
Constructor.newInstance;<datadog.trace.agent.tooling.bytebuddy.matcher.NameMatchers$$Lambda$8.2030562336: void <init>()>;java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite;215;isAccessible=true;
Constructor.newInstance;<datadog.trace.api.cache.FixedSizeCache$FixedSizeKeyValueCache$$Lambda$7.984213526: void <init>()>;java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite;215;isAccessible=true;
Constructor.newInstance;<datadog.trace.instrumentation.aerospike4.AerospikeClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.aerospike4.CommandInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.aerospike4.NioEventLoopInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.aerospike4.PartitionInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.akka.concurrent.AkkaActorCellInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.akka.concurrent.AkkaEnvelopeInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.akka.concurrent.AkkaForkJoinExecutorTaskInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.akka.concurrent.AkkaForkJoinPoolInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.akka.concurrent.AkkaForkJoinTaskInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.akka.concurrent.AkkaMailboxInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.akka.concurrent.AkkaRoutedActorCellInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.akka.init.DisableTracingActorInitInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.akkahttp.AkkaHttp2ServerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.akkahttp.AkkaHttpServerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.akkahttp.AkkaHttpSingleRequestInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.akkahttp.AkkaPoolMasterActorInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.apachehttpasyncclient.ApacheHttpAsyncClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.apachehttpasyncclient.ApacheHttpClientRedirectInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.apachehttpasyncclient.BasicFutureInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.apachehttpclient.ApacheHttpClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.apachehttpclient5.ApacheHttpAsyncClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.apachehttpclient5.ApacheHttpClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.aws.v0.AWSClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.aws.v0.AWSHttpClientInstrumentation$RequestExecutorInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.aws.v0.AWSHttpClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.aws.v1.lambda.LambdaHandlerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.aws.v1.sqs.QueueBufferConfigInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.aws.v1.sqs.SqsJmsMessageInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.aws.v1.sqs.SqsReceiveRequestInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.aws.v1.sqs.SqsReceiveResultInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.aws.v2.AwsClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.aws.v2.AwsHttpClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.aws.v2.sqs.SqsJmsMessageInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.aws.v2.sqs.SqsReceiveRequestInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.aws.v2.sqs.SqsReceiveResultInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.axis2.AxisEngineInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.axway.AxwayHTTPPluginInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.caffeine.BoundedLocalCacheInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.classloading.ClassloadingInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.commonshttpclient.CommonsHttpClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.connection_error.jersey.ClientRuntimeInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.connection_error.resteasy.ResteasyClientConnectionErrorInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.couchbase.client.CouchbaseBucketInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.couchbase.client.CouchbaseClusterInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.couchbase.client.CouchbaseCoreInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.couchbase.client.CouchbaseNetworkInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.couchbase_31.client.BaseRequestInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.couchbase_31.client.CoreEnvironmentBuilderInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.couchbase_31.client.DefaultErrorUtilInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.couchbase_32.client.BaseRequestInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.couchbase_32.client.CoreEnvironmentBuilderInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.couchbase_32.client.DefaultErrorUtilInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.datanucleus.ExecutionContextInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.datanucleus.JDOQueryInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.datanucleus.JDOTransactionInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.datastax.cassandra.CassandraClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.datastax.cassandra4.CassandraClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.directbytebuffer.ByteBufferInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.directbytebuffer.DirectByteBufferInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.directbytebuffer.FileChannelImplInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.dropwizard.view.DropwizardViewInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.elasticsearch.ThreadedActionListenerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.elasticsearch2.Elasticsearch2TransportClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.elasticsearch5.Elasticsearch5RestClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.elasticsearch5.Elasticsearch5TransportClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.elasticsearch5_3.Elasticsearch53TransportClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.elasticsearch6.Elasticsearch6TransportClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.elasticsearch6_4.Elasticsearch6RestClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.elasticsearch7.Elasticsearch7RestClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.elasticsearch7_3.Elasticsearch73TransportClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.finatra.FinatraInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.glassfish.GlassFishInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.googlehttpclient.GoogleHttpClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.graal.nativeimage.AnnotationSubstitutionProcessorInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.graal.nativeimage.LinkAtBuildTimeInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.graal.nativeimage.NativeImageGeneratorRunnerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.graal.nativeimage.ResourcesFeatureInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.graal.nativeimage.VMRuntimeInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.graphqljava.GraphQLJavaInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.grizzly.GrizzlyHttpHandlerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.grizzly.client.AsyncCompletionHandlerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.grizzly.client.AsyncHttpClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.grizzlyhttp232.DefaultFilterChainInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.grizzlyhttp232.FilterInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.grizzlyhttp232.GrizzlyByteBodyInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.grizzlyhttp232.GrizzlyCharBodyInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.grizzlyhttp232.HttpCodecFilterInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.grizzlyhttp232.HttpServerFilterInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.grizzlyhttp232.ParsedBodyParametersInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.grpc.SynchronizationContextInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.grpc.client.ClientCallImplInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.grpc.client.ClientStreamListenerImplInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.grpc.client.ManagedChannelImplInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.grpc.client.MessagesAvailableInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.grpc.server.GrpcServerBuilderInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.guava10.ListenableFutureInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.hazelcast36.ClientInvocationInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.hazelcast36.DistributedObjectInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.hazelcast39.ClientInvocationInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.hazelcast39.ClientMessageInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.hazelcast4.ClientInvocationInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.hazelcast4.ClientListenerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.hibernate.core.v3_3.CriteriaInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.hibernate.core.v3_3.QueryInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.hibernate.core.v3_3.SessionFactoryInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.hibernate.core.v3_3.SessionInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.hibernate.core.v3_3.TransactionInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.hibernate.core.v4_0.CriteriaInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.hibernate.core.v4_0.QueryInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.hibernate.core.v4_0.SessionFactoryInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.hibernate.core.v4_0.SessionInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.hibernate.core.v4_0.TransactionInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.hibernate.core.v4_3.ProcedureCallInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.hibernate.core.v4_3.SessionInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.http_url_connection.HttpUrlConnectionInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.http_url_connection.UrlInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.hystrix.HystrixInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.hystrix.HystrixThreadPoolInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.iastinstrumenter.IastInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.ignite.v2.IgniteInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.ignite.v2.cache.IgniteCacheAsyncInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.ignite.v2.cache.IgniteCacheSyncInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jackson.core.JsonParserInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jakarta3.ContainerRequestFilterInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jakarta3.DefaultRequestContextInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jakarta3.JakartaRsAnnotationsInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jakarta3.JakartaRsAsyncResponseInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.java.completablefuture.AsyncTaskInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.java.completablefuture.CompletableFutureUniCompletionInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.java.completablefuture.CompletableFutureUniCompletionSubclassInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.java.concurrent.AsyncPropagatingDisableInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.java.concurrent.ConsumerTaskInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.java.concurrent.JavaExecutorInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.java.concurrent.JavaForkJoinPoolInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.java.concurrent.JavaForkJoinTaskInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.java.concurrent.NonStandardExecutorInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.java.concurrent.RejectedExecutionHandlerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.java.concurrent.RunnableFutureInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.java.concurrent.RunnableInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.java.concurrent.ThreadPoolExecutorInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.java.concurrent.WrapRunnableAsNewTaskInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.java.lang.InputStreamInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.java.lang.ProcessImplInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jaxrs.JaxRsClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jaxrs.v1.JaxRsClientV1Instrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jaxrs1.JaxRsAnnotationsInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jaxrs2.ContainerRequestFilterInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jaxrs2.DefaultRequestContextInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jaxrs2.JaxRsAnnotationsInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jaxrs2.JaxRsAsyncResponseInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jaxrs2.JerseyRequestContextInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jaxrs2.Resteasy30RequestContextInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jaxrs2.Resteasy31RequestContextInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jaxws1.WebServiceInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jaxws2.WebServiceProviderInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jbosslogmanager.ExtLogRecordInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jbosslogmanager.LoggerNodeInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jbossmodules.ModuleInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jdbc.ConnectionInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jdbc.DB2ConnectionInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jdbc.DB2PreparedStatementInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jdbc.DataSourceInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jdbc.DriverInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jdbc.PreparedStatementInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jdbc.StatementInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jedis.JedisInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jedis30.JedisInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jedis40.JedisInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jersey2.MessageBodyReaderInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jersey3.MessageBodyReaderInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jetty11.JettyServerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jetty11.RequestInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jetty70.JettyGeneratorInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jetty70.JettyServerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jetty70.RequestExtractParametersInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jetty70.RequestInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jetty70.UrlEncodedInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jetty76.JettyGeneratorInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jetty76.JettyServerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jetty76.RequestInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jetty9.JettyServerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jetty9.RequestInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jetty92.RequestExtractContentParametersInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jetty93.RequestExtractContentParametersInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jetty_client.FutureResponseListenerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jetty_client.JettyAddListenerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jetty_client.JettyClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jetty_util.QueuedThreadPoolInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jms.JMSMessageConsumerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jms.JMSMessageProducerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jms.MessageInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jms.SessionInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jsp.JSPInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.jsp.JasperJSPCompilationContextInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.junit4.JUnit4Instrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.junit4.JUnit4SuiteEventsInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.junit5.JUnit5Instrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.kafka_clients.ConsumerCoordinatorInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.kafka_clients.KafkaConsumerGroupInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.kafka_clients.KafkaConsumerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.kafka_clients.KafkaProducerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.kafka_streams.KafkaStreamTaskInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.kafka_streams.KafkaStreamsSourceNodeRecordDeserializerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.kotlin.coroutines.KotlinCoroutines13Instrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.kotlin.coroutines.KotlinCoroutines15Instrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.lettuce4.LettuceAsyncCommandsInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.lettuce4.LettuceClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.lettuce5.LettuceAsyncCommandsInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.lettuce5.LettuceClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.lettuce5.LettuceReactiveClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.liberty20.LibertyServerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.liberty20.ParsePostDataInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.liberty20.RequestFinishInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.liberty20.ResponseFinishInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.log4j1.CategoryInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.log4j1.LoggingEventInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.log4j2.ThreadContextInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.log4j27.ContextDataInjectorFactoryInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.logback.LogbackLoggerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.logback.LoggingEventInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.micronaut.MicronautInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.mongo.BaseClusterInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.mongo.ByteBufBsonDocumentInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.mongo.DefaultConnectionPoolInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.mongo.InternalStreamConnectionInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.mongo.MongoClient31Instrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.mongo.MongoClient34Instrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.mule4.EventContextInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.mule4.PrivilegedEventInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.netty38.ChannelFutureListenerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.netty38.NettyChannelInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.netty38.NettyChannelPipelineInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.netty4.promise.NettyPromiseInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.netty40.ChannelFutureListenerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.netty40.NettyChannelHandlerContextInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.netty40.NettyChannelPipelineInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.netty41.ChannelFutureListenerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.netty41.HttpPostRequestDecoderInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.netty41.NettyChannelHandlerContextInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.netty41.NettyChannelPipelineInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.ognl.OgnlInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.okhttp2.OkHttp2Instrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.okhttp3.OkHttp3Instrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.opentelemetry.OpenTelemetryInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.opentracing31.GlobalTracerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.opentracing32.GlobalTracerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.osgi43.BundleReferenceInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.play23.PlayInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.play24.PlayInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.play26.PlayInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.playws1.PlayWSClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.playws2.PlayWSClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.playws21.PlayWSClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.quartz.QuartzSchedulingInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.rabbitmq.amqp.RabbitChannelInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.rabbitmq.amqp.RabbitCommandInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.ratpack.ContextParseInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.ratpack.ContinuationInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.ratpack.DefaultExecutionInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.ratpack.PathHandlerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.ratpack.RatpackRequestBodyInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.ratpack.RatpackTypedDataInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.ratpack.ServerErrorHandlerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.ratpack.ServerRegistryInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.reactor.core.ReactorHooksInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.reactor.core.TerminalSubscriberInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.reactor.netty.HttpClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.rediscala.RediscalaInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.redisson.RedissonInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.renaissance.RenaissanceInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.resteasy.DecodedFormParametersInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.resteasy.MessageBodyReaderInvocationInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.restlet.ResourceInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.restlet.RestletInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.restlet.RouteInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.rmi.client.RmiClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.rmi.context.client.RmiClientContextInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.rmi.context.server.RmiServerContextInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.rmi.server.RmiServerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.rxjava2.CompletableInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.rxjava2.FlowableInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.rxjava2.MaybeInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.rxjava2.ObservableInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.rxjava2.SingleInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.scala.concurrent.ScalaForkJoinPoolInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.scala.concurrent.ScalaForkJoinTaskInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.scala210.concurrent.CallbackRunnableInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.scala210.concurrent.FutureObjectInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.scala210.concurrent.PromiseObjectInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.scala213.concurrent.DefaultPromiseInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.scala213.concurrent.FutureObjectInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.scala213.concurrent.PromiseObjectInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.scala213.concurrent.PromiseTransformationInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.servlet.dispatcher.RequestDispatcherInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.servlet.dispatcher.ServletContextInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.servlet.filter.FilterInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.servlet.http.HttpServletInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.servlet.http.HttpServletResponseInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.servlet2.Servlet2Instrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.servlet2.Servlet2ResponseStatusInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.servlet2.ServletRequestBodyInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.servlet3.AsyncContextInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.servlet3.Servlet31RequestBodyInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.servlet3.Servlet3Instrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.servlet5.Servlet5RequestBodyInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.shutdown.ShutdownInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.slick.SlickRunnableInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.sparkjava.RoutesInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.spray.SprayHttpServerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springamqp.AbstractMessageListenerContainerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springamqp.BlockingQueueConsumerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springamqp.DeliveryInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springcloudzuul2.ZuulProxyRequestHelperInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springcloudzuul2.ZuulSendForwardFilterInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springdata.SpringRepositoryInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springjms.AbstractPollingMessageListenerContainerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springscheduling.SpringAsyncInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springscheduling.SpringSchedulingInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springweb.BeanFactoryInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springweb.DispatcherServletInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springweb.HandlerAdapterInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springweb.HttpMessageConverterInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springweb.ServletPathRequestFilterInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springweb.SpringBeanProcessorInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springweb.TemplateAndMatrixVariablesInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springweb.TemplateVariablesUrlHandlerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springweb.WebApplicationContextInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springweb6.DispatcherServletInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springweb6.HandlerAdapterInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springweb6.ServletPathRequestFilterInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springweb6.TemplateAndMatrixVariablesInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springweb6.TemplateVariablesUrlHandlerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springweb6.WebApplicationContextInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springwebflux.client.WebClientFilterInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springwebflux.server.DispatcherHandlerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springwebflux.server.HandlerAdapterInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springwebflux.server.RouterFunctionInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.springwebflux6.client.WebClientFilterInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.spymemcached.MemcachedClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.synapse3.SynapseClientInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.synapse3.SynapseClientWorkerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.synapse3.SynapsePassthruInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.synapse3.SynapseServerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.synapse3.SynapseServerWorkerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.testng.TestNGInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.tomcat.RequestInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.tomcat.ResponseInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.tomcat.TomcatServerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.tomcat55.ParsedBodyParametersInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.tomcat6.ParsedBodyParametersInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.trace_annotation.TraceAnnotationsInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.trace_annotation.TraceConfigInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.twilio.TwilioAsyncInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.twilio.TwilioSyncInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.undertow.FormDataParserInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.undertow.HandlerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.undertow.JakartaServletInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.undertow.ServletInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.undertow.UndertowInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_3_4.server.HttpServerResponseEndHandlerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_3_4.server.RouteHandlerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_3_4.server.RouteImplInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_3_4.server.RoutingContextImplInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_4_0.server.HttpServerResponseEndHandlerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_4_0.server.RouteHandlerInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_4_0.server.RouteImplInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_4_0.server.RoutingContextImplInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_redis_client.CommandImplInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_redis_client.RedisAPIInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_redis_client.RedisInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_redis_client.RequestImplInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_sql_client.CursorImplInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_sql_client.MySQLConnectionFactoryInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_sql_client.MySQLConnectionImplInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_sql_client.MySQLPoolImplInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_sql_client.PreparedQueryInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_sql_client.PreparedStatementImplInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_sql_client.QueryImplInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_sql_client.SqlClientBaseInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<datadog.trace.instrumentation.vertx_sql_client.SqlConnectionBaseInstrumentation: void <init>()>;datadog.trace.agent.tooling.Instrumenters$1.hasNext;69;isAccessible=false;
Constructor.newInstance;<java.time.chrono.AbstractChronology$$Lambda$2.1558600329: void <init>()>;java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite;215;isAccessible=true;
Constructor.newInstance;<java.time.chrono.AbstractChronology$$Lambda$3.445051633: void <init>()>;java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite;215;isAccessible=true;
Constructor.newInstance;<java.time.chrono.AbstractChronology$$Lambda$4.1349277854: void <init>()>;java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite;215;isAccessible=true;
Constructor.newInstance;<java.time.format.DateTimeFormatter$$Lambda$5.2040495657: void <init>()>;java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite;215;isAccessible=true;
Constructor.newInstance;<java.time.format.DateTimeFormatter$$Lambda$6.661672156: void <init>()>;java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite;215;isAccessible=true;
Constructor.newInstance;<java.time.format.DateTimeFormatterBuilder$$Lambda$1.2047329716: void <init>()>;java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite;215;isAccessible=true;
Constructor.newInstance;<sun.net.www.protocol.jar.Handler: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Field.get*;<sun.misc.Unsafe: sun.misc.Unsafe theUnsafe>;com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$1.run;4146;isAccessible=true;
Field.getDeclaringClass;<java.lang.invoke.BoundMethodHandle$Species_L3: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;43;isAccessible=false;
Field.getDeclaringClass;<java.lang.invoke.BoundMethodHandle$Species_L4: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;43;isAccessible=false;
Field.getDeclaringClass;<java.lang.invoke.BoundMethodHandle$Species_LL: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;43;isAccessible=false;
Field.getDeclaringClass;<sun.misc.Unsafe: sun.misc.Unsafe theUnsafe>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;43;isAccessible=true;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_L3: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;34;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_L3: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;35;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_L3: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;36;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_L3: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorImpl.<init>;48;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_L3: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorImpl.<init>;52;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_L4: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;34;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_L4: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;35;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_L4: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;36;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_L4: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorImpl.<init>;48;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_L4: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorImpl.<init>;52;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_LL: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;34;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_LL: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;35;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_LL: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;36;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_LL: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorImpl.<init>;48;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_LL: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorImpl.<init>;52;isAccessible=false;
Field.getModifiers;<sun.misc.Unsafe: sun.misc.Unsafe theUnsafe>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;34;isAccessible=true;
Field.getModifiers;<sun.misc.Unsafe: sun.misc.Unsafe theUnsafe>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;35;isAccessible=true;
Field.getModifiers;<sun.misc.Unsafe: sun.misc.Unsafe theUnsafe>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;36;isAccessible=true;
Field.getModifiers;<sun.misc.Unsafe: sun.misc.Unsafe theUnsafe>;sun.reflect.UnsafeFieldAccessorImpl.<init>;48;isAccessible=true;
Field.getModifiers;<sun.misc.Unsafe: sun.misc.Unsafe theUnsafe>;sun.reflect.UnsafeFieldAccessorImpl.<init>;52;isAccessible=true;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$CounterCell: long p0>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$CounterCell: long p1>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$CounterCell: long p2>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$CounterCell: long p3>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$CounterCell: long p4>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$CounterCell: long p5>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$CounterCell: long p6>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$CounterCell: long value>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$Node[] nextTable>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8$Node[] table>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: float LOAD_FACTOR>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int DEFAULT_CAPACITY>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int DEFAULT_CONCURRENCY_LEVEL>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int HASH_BITS>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int MAXIMUM_CAPACITY>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int MAX_ARRAY_SIZE>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int MIN_TRANSFER_STRIDE>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int MIN_TREEIFY_CAPACITY>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int MOVED>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int NCPU>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int RESERVED>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int TREEBIN>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int TREEIFY_THRESHOLD>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int UNTREEIFY_THRESHOLD>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int cellsBusy>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int sizeCtl>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int transferIndex>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: int transferOrigin>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: java.io.ObjectStreamField[] serialPersistentFields>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: long baseCount>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<com.googlecode.concurrentlinkedhashmap.ConcurrentHashMapV8: long serialVersionUID>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.lang.invoke.BoundMethodHandle$Species_L3: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.lang.invoke.BoundMethodHandle$Species_L4: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.lang.invoke.BoundMethodHandle$Species_LL: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.lang.invoke.CallSite: java.lang.invoke.MethodHandle target>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.lang.invoke.MethodHandle: java.lang.invoke.LambdaForm form>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.lang.invoke.MethodHandle: java.lang.invoke.MethodType type>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.lang.invoke.MethodType: java.lang.Class rtype>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.lang.invoke.MethodType: java.lang.Class[] ptypes>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.lang.invoke.MethodType: long serialVersionUID>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.ConcurrentLinkedQueue$Node: java.lang.Object item>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.ConcurrentLinkedQueue$Node: java.util.concurrent.ConcurrentLinkedQueue$Node next>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node head>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.ConcurrentLinkedQueue: java.util.concurrent.ConcurrentLinkedQueue$Node tail>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.ConcurrentLinkedQueue: long serialVersionUID>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.CopyOnWriteArrayList: java.util.concurrent.locks.ReentrantLock lock>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.CopyOnWriteArrayList: long serialVersionUID>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.atomic.AtomicBoolean: int value>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.atomic.AtomicBoolean: long serialVersionUID>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.atomic.AtomicBoolean: long valueOffset>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.atomic.AtomicBoolean: sun.misc.Unsafe unsafe>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.atomic.AtomicReference: java.lang.Object value>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.atomic.AtomicReference: long serialVersionUID>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.atomic.AtomicReference: long valueOffset>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.atomic.AtomicReference: sun.misc.Unsafe unsafe>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: int CANCELLED>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: int CONDITION>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: int PROPAGATE>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: int SIGNAL>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: int waitStatus>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node EXCLUSIVE>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node SHARED>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node next>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node prev>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer: int state>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node head>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node tail>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer: long serialVersionUID>;java.lang.Class.searchFields;;isAccessible=false;
Field.set*;<java.lang.invoke.BoundMethodHandle$Species_L3: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;java.lang.invoke.BoundMethodHandle$Factory.setSpeciesDataToConcreteBMHClass;792;isAccessible=false;
Field.set*;<java.lang.invoke.BoundMethodHandle$Species_L4: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;java.lang.invoke.BoundMethodHandle$Factory.setSpeciesDataToConcreteBMHClass;792;isAccessible=false;
Field.set*;<java.lang.invoke.BoundMethodHandle$Species_LL: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;java.lang.invoke.BoundMethodHandle$Factory.setSpeciesDataToConcreteBMHClass;792;isAccessible=false;
Method.getModifiers;<datadog.trace.bootstrap.AgentBootstrap: void main(java.lang.String[])>;sun.launcher.LauncherHelper.validateMainClass;683;isAccessible=false;
Method.getName;<datadog.trace.agent.tooling.AgentCLI: void printIntegrationNames()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<datadog.trace.agent.tooling.AgentCLI: void scanDependencies(java.lang.String[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<datadog.trace.agent.tooling.AgentCLI: void sendSampleTraces(int,double)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<datadog.trace.agent.tooling.AgentCLI: void uploadCrash(java.lang.String[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<datadog.trace.bootstrap.Agent: java.lang.Class installAgentCLI(java.net.URL)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<datadog.trace.bootstrap.Agent: void shutdown(boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<datadog.trace.bootstrap.Agent: void start(java.lang.instrument.Instrumentation,java.net.URL)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<datadog.trace.bootstrap.AgentBootstrap: void agentmain(java.lang.String,java.lang.instrument.Instrumentation)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<datadog.trace.bootstrap.AgentBootstrap: void main(java.lang.String[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<datadog.trace.bootstrap.AgentBootstrap: void premain(java.lang.String,java.lang.instrument.Instrumentation)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<datadog.trace.logging.LogLevel: boolean isEnabled(datadog.trace.logging.LogLevel)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<datadog.trace.logging.LogLevel: datadog.trace.logging.LogLevel fromString(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<datadog.trace.logging.LogLevel: datadog.trace.logging.LogLevel valueOf(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<datadog.trace.logging.LogLevel: datadog.trace.logging.LogLevel[] values()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: boolean isInvokeSpecial()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.Class internalCallerClass()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.String internalProperties()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.BoundMethodHandle rebind()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.LambdaForm chooseDelegatingForm(java.lang.invoke.MethodHandle)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.LambdaForm makeReinvokerForm(java.lang.invoke.MethodHandle,int,java.lang.Object,java.lang.String,boolean,java.lang.invoke.LambdaForm$NamedFunction,java.lang.invoke.LambdaForm$NamedFunction)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.LambdaForm makeReinvokerForm(java.lang.invoke.MethodHandle,int,java.lang.Object,java.lang.invoke.LambdaForm$NamedFunction)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.MemberName internalMemberName()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.MethodHandle asTypeUncached(java.lang.invoke.MethodType)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.MethodHandle getTarget()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.MethodHandle getTarget()>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle$Interface: java.lang.Object checkReceiver(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle$Interface: java.lang.Object checkReceiver(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle$Interface: java.lang.Object internalProperties()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle$Interface: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: boolean checkInitialized(java.lang.invoke.MemberName)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: boolean shouldBeInitialized(java.lang.invoke.MemberName)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: int afIndex(byte,boolean,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: int ftypeKind(java.lang.Class)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object allocateInstance(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object allocateInstance(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object checkBase(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object checkBase(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object checkCast(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object checkCast(java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object checkCast(java.lang.Object,java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object constructorMethod(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object constructorMethod(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object findDirectMethodHandle(java.lang.invoke.LambdaForm$Name)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object internalMemberName(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object internalMemberName(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object internalMemberNameEnsureInit(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object internalMemberNameEnsureInit(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object nullCheck(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object staticBase(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object staticBase(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.String internalProperties()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.BoundMethodHandle rebind()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(java.lang.Class,java.lang.invoke.MemberName)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(java.lang.invoke.MemberName)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(java.lang.reflect.Field)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(java.lang.reflect.Method)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle makeAllocator(java.lang.invoke.MemberName)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedFieldLambdaForm(byte,boolean,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm preparedFieldLambdaForm(byte,boolean,java.lang.Class)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm preparedFieldLambdaForm(java.lang.invoke.MemberName)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm preparedLambdaForm(java.lang.invoke.MemberName)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm preparedLambdaForm(java.lang.invoke.MethodType,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.MemberName internalMemberName()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: long fieldOffset(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: long fieldOffset(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: long staticOffset(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: long staticOffset(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: void ensureInitialized()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: void ensureInitialized(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: void ensureInitialized(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: void maybeCompile(java.lang.invoke.LambdaForm,java.lang.invoke.MemberName)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: boolean checkInvoker(java.lang.invoke.MethodHandle)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.Class impliedRestargType(java.lang.invoke.MethodType,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.Object checkGenericType(java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.Object checkGenericType(java.lang.Object,java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.Object getCallSiteTarget(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.Object getCallSiteTarget(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.String toString()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.LambdaForm callSiteForm(java.lang.invoke.MethodType,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.LambdaForm invokeHandleForm(java.lang.invoke.MethodType,boolean,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MemberName invokeBasicMethod(java.lang.invoke.MethodType)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MemberName linkToCallSiteMethod(java.lang.invoke.MethodType)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MemberName linkToTargetMethod(java.lang.invoke.MethodType)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MemberName methodHandleInvokeLinkerMethod(java.lang.String,java.lang.invoke.MethodType,java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MethodHandle basicInvoker()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MethodHandle cachedInvoker(int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MethodHandle exactInvoker()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MethodHandle genericInvoker()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MethodHandle makeExactOrGeneralInvoker(boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MethodHandle setCachedInvoker(int,java.lang.invoke.MethodHandle)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MethodHandle spreadInvoker(int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.WrongMethodTypeException newWrongMethodTypeException(java.lang.invoke.MethodType,java.lang.invoke.MethodType)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: void checkCustomized(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: void checkCustomized(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: void checkExactType(java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: void checkExactType(java.lang.Object,java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: void maybeCompileToBytecode(java.lang.invoke.MethodHandle)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: void maybeCustomize(java.lang.invoke.MethodHandle)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: boolean assertCorrectArity(java.lang.invoke.MethodHandle,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: boolean profileBoolean(boolean,int[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: boolean profileBoolean(boolean,int[])>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: int countNonNull(java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.ClassCastException newClassCastException(java.lang.Class,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object castReference(java.lang.Class,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object copyAsPrimitiveArray(sun.invoke.util.Wrapper,java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object guardWithCatch(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle,java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object guardWithCatch(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle,java.lang.Object[])>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object valueConversion(java.lang.Class,java.lang.Class,boolean,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array(java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array(java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] computeValueConversions(java.lang.invoke.MethodType,java.lang.invoke.MethodType,boolean,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillArray(java.lang.Integer,java.lang.Object[],java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillArray(java.lang.Integer,java.lang.Object[],java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillArray(java.lang.Integer,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillArray(java.lang.Integer,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillArray(java.lang.Integer,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillArray(java.lang.Integer,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillArray(java.lang.Integer,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillArray(java.lang.Integer,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillArray(java.lang.Integer,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillArray(java.lang.Integer,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillNewArray(java.lang.Integer,java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillNewTypedArray(java.lang.Object[],java.lang.Integer,java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] identity(java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] makeArray(java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] prepend(java.lang.Object,java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.LambdaForm makeGuardWithCatchForm(java.lang.invoke.MethodType)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.LambdaForm makeGuardWithTestForm(java.lang.invoke.MethodType)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle bindCaller(java.lang.invoke.MethodHandle,java.lang.Class)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle buildArrayProducer(java.lang.Class)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle buildFiller(int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle buildVarargsArray(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle fakeMethodHandleInvoke(java.lang.invoke.MemberName)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle fillToRight(int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle findCollector(java.lang.String,int,java.lang.Class,java.lang.Class[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeArrayElementAccessor(java.lang.Class,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeBlockInlningWrapper(java.lang.invoke.MethodHandle)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeCollectArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeGuardWithCatch(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeGuardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeIntrinsic(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandleImpl$Intrinsic)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeIntrinsic(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.invoke.MethodHandleImpl$Intrinsic)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvert(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvert(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertIndirect(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeSpreadArguments(java.lang.invoke.MethodHandle,java.lang.Class,int,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeVarargsCollector(java.lang.invoke.MethodHandle,java.lang.Class)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeWrappedMember(java.lang.invoke.MethodHandle,java.lang.invoke.MemberName,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle profile(java.lang.invoke.MethodHandle)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle selectAlternative(boolean,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle throwException(java.lang.invoke.MethodType)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle varargsArray(int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle varargsArray(java.lang.Class,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle[] access$000()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle[] access$100()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle[] makeArrays()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle[] makeFillArrays()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: sun.invoke.empty.Empty throwException(java.lang.Throwable)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: sun.invoke.empty.Empty throwException(java.lang.Throwable)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: void assertSame(java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: void checkSpreadArgument(java.lang.Object,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: void checkSpreadArgument(java.lang.Object,int)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: void fillWithArguments(java.lang.Object[],int,java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: void initStatics()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.invoke;<datadog.trace.agent.tooling.AgentCLI: void printIntegrationNames()>;datadog.trace.bootstrap.AgentJar.printIntegrationNames;118;isAccessible=false;
Method.invoke;<datadog.trace.bootstrap.Agent: java.lang.Class installAgentCLI(java.net.URL)>;datadog.trace.bootstrap.AgentJar.installAgentCLI;128;isAccessible=false;
Method.invoke;<datadog.trace.logging.LogLevel: datadog.trace.logging.LogLevel[] values()>;java.lang.Class.getEnumConstantsShared;;isAccessible=true;
