Array.newInstance;java.lang.String[];java.util.Arrays.copyOf;2245;;
Array.newInstance;java.lang.Thread[];java.util.Arrays.copyOf;2245;;
Array.newInstance;java.math.BigInteger[];java.util.Arrays.copyOf;2245;;
Array.newInstance;sun.security.jca.ProviderConfig[];java.util.Arrays.copyOf;2245;;
Class.forName;java.security.MessageDigestSpi;java.security.Security.getSpiClass;676;;
Class.forName;org.dacapo.h2.TPCC;org.dacapo.harness.H2.prepare;45;;
Class.forName;org.dacapo.harness.H2;org.dacapo.harness.TestHarness.findClass;281;;
Class.forName;org.h2.Driver;java.sql.DriverManager.isDriverAllowed;463;;
Class.forName;org.h2.Driver;java.util.ServiceLoader$LazyIterator.next;363;;
Class.forName;org.h2.Driver;org.dacapo.h2.TPCC.prepare;147;;
Class.forName;org.h2.engine.SessionFactoryEmbedded;org.h2.util.ClassUtils.loadSystemClass;57;;
Class.forName;sun.jdbc.odbc.JdbcOdbcDriver;java.sql.DriverManager.isDriverAllowed;463;;
Class.forName;sun.jdbc.odbc.JdbcOdbcDriver;java.util.ServiceLoader$LazyIterator.next;363;;
Class.forName;sun.net.www.protocol.jar.Handler;java.net.URL.getURLStreamHandler;1191;;
Class.forName;sun.nio.fs.LinuxFileSystemProvider;sun.nio.fs.DefaultFileSystemProvider$1.run;47;;
Class.forName;sun.security.provider.SecureRandom;java.security.Provider$Service.getImplClass;1279;;
Class.forName;sun.security.provider.SHA;java.security.Provider$Service.getImplClass;1279;;
Class.forName;sun.util.calendar.JulianCalendar;sun.util.calendar.CalendarSystem.forName;167;;
Class.getDeclaredField;<java.math.BigInteger: int[] mag>;java.math.BigInteger.<clinit>;3132;isAccessible=false;
Class.getDeclaredField;<java.math.BigInteger: int signum>;java.math.BigInteger.<clinit>;3130;isAccessible=false;
Class.getDeclaredField;<java.sql.SQLException: java.sql.SQLException next>;java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.<init>;212;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.CopyOnWriteArrayList: java.util.concurrent.locks.ReentrantLock lock>;java.util.concurrent.CopyOnWriteArrayList.<clinit>;1334;isAccessible=false;
Class.getMethod;<Harness: void main(java.lang.String[])>;sun.launcher.LauncherHelper.getMainMethod;494;isAccessible=false;
Class.getMethod;<org.dacapo.h2.TPCC: org.dacapo.h2.TPCC make(org.dacapo.parser.Config,java.io.File,java.lang.Boolean,java.lang.Boolean)>;org.dacapo.harness.H2.prepare;46;isAccessible=false;
Class.getMethod;<org.dacapo.h2.TPCC: void iteration(java.lang.String)>;org.dacapo.harness.H2.prepare;49;isAccessible=false;
Class.getMethod;<org.dacapo.h2.TPCC: void postIteration(java.lang.String)>;org.dacapo.harness.H2.prepare;50;isAccessible=false;
Class.getMethod;<org.dacapo.h2.TPCC: void preIteration(java.lang.String)>;org.dacapo.harness.H2.prepare;48;isAccessible=false;
Class.getMethod;<org.dacapo.h2.TPCC: void prepare(java.lang.String)>;org.dacapo.harness.H2.prepare;47;isAccessible=false;
Class.newInstance;org.h2.Driver;java.util.ServiceLoader$LazyIterator.next;373;;
Class.newInstance;org.h2.engine.SessionFactoryEmbedded;org.h2.engine.SessionRemote.connectEmbeddedOrServer;241;;
Class.newInstance;sun.jdbc.odbc.JdbcOdbcDriver;java.util.ServiceLoader$LazyIterator.next;373;;
Class.newInstance;sun.net.www.protocol.jar.Handler;java.net.URL.getURLStreamHandler;1199;;
Class.newInstance;sun.nio.fs.LinuxFileSystemProvider;sun.nio.fs.DefaultFileSystemProvider$1.run;52;;
Class.newInstance;sun.reflect.GeneratedConstructorAccessor1;sun.reflect.MethodAccessorGenerator$1.run;399;;
Class.newInstance;sun.security.provider.Sun;sun.security.jca.ProviderConfig$2.run;221;;
Class.newInstance;sun.text.resources.FormatData_en_AU;java.util.ResourceBundle$Control.newBundle;2572;;
Class.newInstance;sun.text.resources.FormatData_en;java.util.ResourceBundle$Control.newBundle;2572;;
Class.newInstance;sun.text.resources.FormatData_en_US;java.util.ResourceBundle$Control.newBundle;2572;;
Class.newInstance;sun.text.resources.FormatData;java.util.ResourceBundle$Control.newBundle;2572;;
Class.newInstance;sun.util.calendar.JulianCalendar;sun.util.calendar.CalendarSystem.forName;168;;
Class.newInstance;sun.util.resources.CalendarData_en;java.util.ResourceBundle$Control.newBundle;2572;;
Class.newInstance;sun.util.resources.CalendarData;java.util.ResourceBundle$Control.newBundle;2572;;
Class.newInstance;sun.util.resources.CurrencyNames_en_AU;java.util.ResourceBundle$Control.newBundle;2572;;
Class.newInstance;sun.util.resources.CurrencyNames_en_US;java.util.ResourceBundle$Control.newBundle;2572;;
Class.newInstance;sun.util.resources.CurrencyNames;java.util.ResourceBundle$Control.newBundle;2572;;
Constructor.getModifiers;<org.h2.Driver: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.h2.engine.SessionFactoryEmbedded: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.h2.engine.SessionFactoryEmbedded: void <init>()>;sun.reflect.NativeConstructorAccessorImpl.newInstance;48;isAccessible=true;
Constructor.getModifiers;<sun.jdbc.odbc.JdbcOdbcDriver: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.net.www.protocol.jar.Handler: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.fs.LinuxFileSystemProvider: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.reflect.GeneratedConstructorAccessor1: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.security.provider.Sun: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.FormatData_en_AU: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.FormatData_en_US: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.FormatData_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.FormatData: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.calendar.JulianCalendar: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.CalendarData_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.CalendarData: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.CurrencyNames_en_AU: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.CurrencyNames_en_US: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.CurrencyNames: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.dacapo.harness.H2: void <init>(org.dacapo.parser.Config,java.io.File)>;org.dacapo.harness.TestHarness.runBenchmark;211;isAccessible=false;
Constructor.newInstance;<org.h2.Driver: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.h2.engine.SessionFactoryEmbedded: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.jdbc.odbc.JdbcOdbcDriver: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.net.www.protocol.jar.Handler: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.fs.LinuxFileSystemProvider: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedConstructorAccessor1: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.security.provider.SecureRandom: void <init>()>;java.security.Provider$Service.newInstance;1240;isAccessible=false;
Constructor.newInstance;<sun.security.provider.SHA: void <init>()>;java.security.Provider$Service.newInstance;1240;isAccessible=false;
Constructor.newInstance;<sun.security.provider.Sun: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData_en_AU: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData_en_US: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.calendar.JulianCalendar: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CalendarData_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CalendarData: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CurrencyNames_en_AU: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CurrencyNames_en_US: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CurrencyNames: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Field.getModifiers;<java.sql.SQLException: java.sql.SQLException next>;java.util.concurrent.atomic.AtomicReferenceFieldUpdater$AtomicReferenceFieldUpdaterImpl.<init>;213;isAccessible=false;
Field.getName;<java.math.BigInteger: int[] mag>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.math.BigInteger: int signum>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.sql.SQLException: int vendorCode>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.sql.SQLException: java.lang.String SQLState>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.sql.SQLException: java.sql.SQLException next>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.CopyOnWriteArrayList: java.util.concurrent.locks.ReentrantLock lock>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.CopyOnWriteArrayList: long serialVersionUID>;java.lang.Class.searchFields;;isAccessible=false;
Method.getModifiers;<Harness: void main(java.lang.String[])>;sun.launcher.LauncherHelper.getMainMethod;503;isAccessible=false;
Method.getName;<Harness: void main(java.lang.String[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.dacapo.h2.TPCC: int runScript(java.io.InputStream,java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.dacapo.h2.TPCC: int runScript(java.lang.String,java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.dacapo.h2.TPCC: org.dacapo.h2.TPCC make(org.dacapo.parser.Config,java.io.File,java.lang.Boolean,java.lang.Boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.dacapo.h2.TPCC: void cleanup()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.dacapo.h2.TPCC: void iteration(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.dacapo.h2.TPCC: void postIteration(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.dacapo.h2.TPCC: void preIteration(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.dacapo.h2.TPCC: void prepare(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.invoke;<org.dacapo.h2.TPCC: org.dacapo.h2.TPCC make(org.dacapo.parser.Config,java.io.File,java.lang.Boolean,java.lang.Boolean)>;org.dacapo.harness.H2.prepare;53;isAccessible=false;
Method.invoke;<org.dacapo.h2.TPCC: void iteration(java.lang.String)>;org.dacapo.harness.H2.iterate;87;isAccessible=false;
Method.invoke;<org.dacapo.h2.TPCC: void postIteration(java.lang.String)>;org.dacapo.harness.H2.postIteration;97;isAccessible=false;
Method.invoke;<org.dacapo.h2.TPCC: void preIteration(java.lang.String)>;org.dacapo.harness.H2.preIteration;77;isAccessible=false;
Method.invoke;<org.dacapo.h2.TPCC: void prepare(java.lang.String)>;org.dacapo.harness.H2.prepare;67;isAccessible=false;
