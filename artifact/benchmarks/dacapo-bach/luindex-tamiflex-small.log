Array.newInstance;java.lang.String[];java.util.Arrays.copyOf;3212;;
Array.newInstance;sun.security.jca.ProviderConfig[];java.util.Arrays.copyOf;3212;;
Class.forName;java.security.MessageDigestSpi;java.security.Security.getSpiClass;675;;
Class.forName;org.apache.lucene.analysis.LowerCaseFilter;org.apache.lucene.analysis.LowerCaseFilter.class$;27;;
Class.forName;org.apache.lucene.analysis.StopFilter;org.apache.lucene.analysis.StopFilter.class$;28;;
Class.forName;org.apache.lucene.analysis.Token;org.apache.lucene.analysis.Token.class$;118;;
Class.forName;org.apache.lucene.analysis.TokenStream;org.apache.lucene.analysis.TokenStream.class$;39;;
Class.forName;org.apache.lucene.analysis.standard.StandardFilter;org.apache.lucene.analysis.standard.StandardFilter.class$;26;;
Class.forName;org.apache.lucene.analysis.standard.StandardTokenizer;org.apache.lucene.analysis.standard.StandardTokenizer.class$;43;;
Class.forName;org.apache.lucene.index.ByteSliceReader;org.apache.lucene.index.ByteSliceReader.class$;29;;
Class.forName;org.apache.lucene.index.CompoundFileWriter;org.apache.lucene.index.CompoundFileWriter.class$;52;;
Class.forName;org.apache.lucene.index.ConcurrentMergeScheduler;org.apache.lucene.index.ConcurrentMergeScheduler.class$;35;;
Class.forName;org.apache.lucene.index.DocFieldConsumers;org.apache.lucene.index.DocFieldConsumers.class$;32;;
Class.forName;org.apache.lucene.index.DocFieldConsumersPerThread;org.apache.lucene.index.DocFieldConsumersPerThread.class$;22;;
Class.forName;org.apache.lucene.index.DocFieldProcessorPerThread;org.apache.lucene.index.DocFieldProcessorPerThread.class$;36;;
Class.forName;org.apache.lucene.index.DocumentsWriter;org.apache.lucene.index.DocumentsWriter.class$;110;;
Class.forName;org.apache.lucene.index.FieldsWriter;org.apache.lucene.index.FieldsWriter.class$;31;;
Class.forName;org.apache.lucene.index.FreqProxFieldMergeState;org.apache.lucene.index.FreqProxFieldMergeState.class$;28;;
Class.forName;org.apache.lucene.index.FreqProxTermsWriter;org.apache.lucene.index.FreqProxTermsWriter.class$;32;;
Class.forName;org.apache.lucene.index.FreqProxTermsWriterPerField;org.apache.lucene.index.FreqProxTermsWriterPerField.class$;27;;
Class.forName;org.apache.lucene.index.IndexFileDeleter;org.apache.lucene.index.IndexFileDeleter.class$;553;;
Class.forName;org.apache.lucene.index.IndexWriter;org.apache.lucene.index.IndexWriter.class$;207;;
Class.forName;org.apache.lucene.index.LogMergePolicy;org.apache.lucene.index.LogMergePolicy.class$;40;;
Class.forName;org.apache.lucene.index.NormsWriter;org.apache.lucene.index.NormsWriter.class$;38;;
Class.forName;org.apache.lucene.index.NormsWriterPerField;org.apache.lucene.index.NormsWriterPerField.class$;28;;
Class.forName;org.apache.lucene.index.SegmentInfo;org.apache.lucene.index.SegmentInfo.class$;28;;
Class.forName;org.apache.lucene.index.SegmentMerger;org.apache.lucene.index.SegmentMerger.class$;44;;
Class.forName;org.apache.lucene.index.StoredFieldsWriter;org.apache.lucene.index.StoredFieldsWriter.class$;26;;
Class.forName;org.apache.lucene.index.StoredFieldsWriterPerField;org.apache.lucene.index.StoredFieldsWriterPerField.class$;23;;
Class.forName;org.apache.lucene.index.TermInfosWriter;org.apache.lucene.index.TermInfosWriter.class$;29;;
Class.forName;org.apache.lucene.index.TermVectorsTermsWriter;org.apache.lucene.index.TermVectorsTermsWriter.class$;29;;
Class.forName;org.apache.lucene.index.TermVectorsTermsWriterPerField;org.apache.lucene.index.TermVectorsTermsWriterPerField.class$;26;;
Class.forName;org.apache.lucene.index.TermVectorsTermsWriterPerThread;org.apache.lucene.index.TermVectorsTermsWriterPerThread.class$;22;;
Class.forName;org.apache.lucene.index.TermsHash;org.apache.lucene.index.TermsHash.class$;39;;
Class.forName;org.apache.lucene.index.TermsHashPerField;org.apache.lucene.index.TermsHashPerField.class$;27;;
Class.forName;org.apache.lucene.index.TermsHashPerThread;org.apache.lucene.index.TermsHashPerThread.class$;22;;
Class.forName;org.apache.lucene.store.BufferedIndexInput;org.apache.lucene.store.BufferedIndexInput.class$;23;;
Class.forName;org.apache.lucene.store.FSDirectory;org.apache.lucene.store.FSDirectory.<clinit>;109;;
Class.forName;org.apache.lucene.store.FSDirectory;org.apache.lucene.store.FSDirectory.class$;108;;
Class.forName;org.apache.lucene.store.RAMOutputStream;org.apache.lucene.store.RAMOutputStream.class$;28;;
Class.forName;org.apache.lucene.util.CloseableThreadLocal;org.apache.lucene.util.CloseableThreadLocal.class$;45;;
Class.forName;org.apache.lucene.util.UnicodeUtil;org.apache.lucene.util.UnicodeUtil.class$;61;;
Class.forName;org.dacapo.harness.Luindex;org.dacapo.harness.TestHarness.findClass;281;;
Class.forName;org.dacapo.luindex.Index;org.dacapo.harness.Luindex.<init>;28;;
Class.forName;sun.net.www.protocol.jar.Handler;java.net.URL.getURLStreamHandler;1175;;
Class.forName;sun.security.provider.MD5;java.security.Provider$Service.getImplClass;1634;;
Class.forName;sun.security.provider.SHA;java.security.Provider$Service.getImplClass;1634;;
Class.getDeclaredField;<java.lang.invoke.MethodHandle: java.lang.invoke.LambdaForm form>;java.lang.invoke.MethodHandle.<clinit>;1451;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.atomic.AtomicBoolean: int value>;java.util.concurrent.atomic.AtomicBoolean.<clinit>;59;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.atomic.AtomicMarkableReference: java.util.concurrent.atomic.AtomicMarkableReference$Pair pair>;java.util.concurrent.atomic.AtomicMarkableReference.objectFieldOffset;204;isAccessible=false;
Class.getMethod;<Harness: void main(java.lang.String[])>;sun.launcher.LauncherHelper.validateMainClass;544;isAccessible=false;
Class.getMethod;<org.dacapo.luindex.Index: void main(java.io.File,java.lang.String[])>;org.dacapo.harness.Luindex.<init>;29;isAccessible=false;
Class.newInstance;org.apache.lucene.store.FSDirectory;org.apache.lucene.store.FSDirectory.getDirectory;182;;
Class.newInstance;sun.net.www.protocol.jar.Handler;java.net.URL.getURLStreamHandler;1184;;
Class.newInstance;sun.security.provider.Sun;sun.security.jca.ProviderConfig$2.run;221;;
Class.newInstance;sun.text.resources.FormatData;java.util.ResourceBundle$Control.newBundle;2645;;
Class.newInstance;sun.text.resources.en.FormatData_en;java.util.ResourceBundle$Control.newBundle;2645;;
Class.newInstance;sun.text.resources.en.FormatData_en_AU;java.util.ResourceBundle$Control.newBundle;2645;;
Class.newInstance;sun.text.resources.en.FormatData_en_US;java.util.ResourceBundle$Control.newBundle;2645;;
Class.newInstance;sun.util.resources.CalendarData;java.util.ResourceBundle$Control.newBundle;2645;;
Class.newInstance;sun.util.resources.CurrencyNames;java.util.ResourceBundle$Control.newBundle;2645;;
Class.newInstance;sun.util.resources.en.CalendarData_en;java.util.ResourceBundle$Control.newBundle;2645;;
Class.newInstance;sun.util.resources.en.CurrencyNames_en_AU;java.util.ResourceBundle$Control.newBundle;2645;;
Class.newInstance;sun.util.resources.en.CurrencyNames_en_US;java.util.ResourceBundle$Control.newBundle;2645;;
Constructor.getModifiers;<org.apache.lucene.store.FSDirectory: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.net.www.protocol.jar.Handler: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.security.provider.Sun: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.FormatData: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.en.FormatData_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.en.FormatData_en_AU: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.en.FormatData_en_US: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.CalendarData: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.CurrencyNames: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.en.CalendarData_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.en.CurrencyNames_en_AU: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.en.CurrencyNames_en_US: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.lucene.store.FSDirectory: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.dacapo.harness.Luindex: void <init>(org.dacapo.parser.Config,java.io.File)>;org.dacapo.harness.TestHarness.runBenchmark;211;isAccessible=false;
Constructor.newInstance;<org.dacapo.luindex.Index: void <init>(java.io.File)>;org.dacapo.harness.Luindex.<init>;33;isAccessible=false;
Constructor.newInstance;<sun.net.www.protocol.jar.Handler: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.security.provider.MD5: void <init>()>;java.security.Provider$Service.newInstance;1595;isAccessible=false;
Constructor.newInstance;<sun.security.provider.SHA: void <init>()>;java.security.Provider$Service.newInstance;1595;isAccessible=false;
Constructor.newInstance;<sun.security.provider.Sun: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.en.FormatData_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.en.FormatData_en_AU: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.en.FormatData_en_US: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CalendarData: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CurrencyNames: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.en.CalendarData_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.en.CurrencyNames_en_AU: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.en.CurrencyNames_en_US: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Field.getName;<java.lang.invoke.MethodHandle: java.lang.invoke.LambdaForm form>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.lang.invoke.MethodHandle: java.lang.invoke.MethodType type>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.atomic.AtomicBoolean: int value>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.atomic.AtomicBoolean: long serialVersionUID>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.atomic.AtomicBoolean: long valueOffset>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.atomic.AtomicBoolean: sun.misc.Unsafe unsafe>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.atomic.AtomicMarkableReference: java.util.concurrent.atomic.AtomicMarkableReference$Pair pair>;java.lang.Class.searchFields;;isAccessible=false;
Method.getModifiers;<Harness: void main(java.lang.String[])>;sun.launcher.LauncherHelper.validateMainClass;557;isAccessible=false;
Method.getName;<Harness: void main(java.lang.String[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.dacapo.luindex.Index: void main(java.io.File,java.lang.String[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.invoke;<org.dacapo.luindex.Index: void main(java.io.File,java.lang.String[])>;org.dacapo.harness.Luindex.iterate;66;isAccessible=false;
