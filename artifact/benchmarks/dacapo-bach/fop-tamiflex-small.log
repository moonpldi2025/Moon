Array.newInstance;char[];sun.invoke.util.BytecodeDescriptor.parseSig;90;;
Array.newInstance;int[];sun.invoke.util.BytecodeDescriptor.parseSig;90;;
Array.newInstance;java.lang.Class[];java.util.AbstractCollection.toArray;179;;
Array.newInstance;java.lang.Class[];java.util.Arrays.copyOf;3212;;
Array.newInstance;java.lang.Class[];java.util.Arrays.copyOfRange;3484;;
Array.newInstance;java.lang.Class[];sun.invoke.util.BytecodeDescriptor.parseSig;90;;
Array.newInstance;java.lang.Object[];sun.invoke.util.BytecodeDescriptor.parseSig;90;;
Array.newInstance;java.lang.String[];java.util.Arrays.copyOf;3212;;
Array.newInstance;java.lang.invoke.LambdaForm$BasicType[];java.util.Arrays.copyOf;3212;;
Array.newInstance;java.lang.invoke.LambdaForm$BasicType[];sun.invoke.util.BytecodeDescriptor.parseSig;90;;
Array.newInstance;java.lang.invoke.LambdaForm$Name[];java.util.Arrays.copyOf;3212;;
Array.newInstance;java.lang.invoke.LambdaForm$Name[];sun.invoke.util.BytecodeDescriptor.parseSig;90;;
Array.newInstance;java.lang.invoke.MethodHandle[];java.util.Arrays.copyOf;3212;;
Array.newInstance;java.text.FieldPosition[];java.util.Arrays.copyOf;3212;;
Array.newInstance;sun.security.jca.ProviderConfig[];java.util.Arrays.copyOf;3212;;
Class.forName;com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;javax.xml.transform.FactoryFinder.getProviderClass;116;;
Class.forName;com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl;javax.xml.parsers.FactoryFinder.getProviderClass;113;;
Class.forName;java.awt.Color;org.apache.fop.area.Trait.class$;228;;
Class.forName;java.awt.EventQueue;sun.awt.SunToolkit.initEQ;120;;
Class.forName;java.awt.geom.Rectangle2D;org.apache.xmlgraphics.image.loader.impl.PreloaderEPS.class$;49;;
Class.forName;java.lang.Boolean;org.apache.fop.area.Trait.class$;228;;
Class.forName;java.lang.Integer;org.apache.fop.area.Trait.class$;228;;
Class.forName;java.lang.String;org.apache.commons.logging.impl.LogFactoryImpl.class$;69;;
Class.forName;java.lang.String;org.apache.fop.area.Trait.class$;228;;
Class.forName;java.lang.Thread;org.apache.commons.logging.LogFactory.class$;220;;
Class.forName;java.security.AccessController;com.sun.org.apache.xml.internal.serializer.OutputPropertiesFactory.findAccessControllerClass;251;;
Class.forName;java.security.MessageDigestSpi;java.security.Security.getSpiClass;675;;
Class.forName;java.util.logging.LoggingProxyImpl;sun.util.logging.LoggingSupport$1.run;54;;
Class.forName;org.apache.batik.dom.DomExtension;org.apache.batik.dom.ExtensibleDOMImplementation.class$;;;
Class.forName;org.apache.batik.dom.svg.SVGDOMImplementation;org.apache.fop.image.loader.batik.BatikUtil.isBatikAvailable;33;;
Class.forName;org.apache.commons.logging.LogFactory;org.apache.commons.logging.LogFactory.class$;220;;
Class.forName;org.apache.commons.logging.LogFactory;org.apache.commons.logging.impl.LogFactoryImpl.class$;69;;
Class.forName;org.apache.fop.Version;org.apache.fop.Version.class$;37;;
Class.forName;org.apache.fop.apps.FopFactory;org.apache.fop.apps.FopFactory.class$;64;;
Class.forName;org.apache.fop.apps.FopFactoryConfigurator;org.apache.fop.apps.FopFactoryConfigurator.class$;64;;
Class.forName;org.apache.fop.area.Area;org.apache.fop.area.Area.class$;135;;
Class.forName;org.apache.fop.area.AreaTreeHandler;org.apache.fop.area.AreaTreeHandler.class$;65;;
Class.forName;org.apache.fop.area.AreaTreeModel;org.apache.fop.area.AreaTreeModel.class$;45;;
Class.forName;org.apache.fop.area.IDTracker;org.apache.fop.area.IDTracker.class$;39;;
Class.forName;org.apache.fop.area.PageViewport;org.apache.fop.area.PageViewport.class$;96;;
Class.forName;org.apache.fop.area.Trait$Background;org.apache.fop.area.Trait.class$;228;;
Class.forName;org.apache.fop.area.Trait$InternalLink;org.apache.fop.area.Trait.class$;228;;
Class.forName;org.apache.fop.cli.InputHandler;org.apache.fop.cli.InputHandler.class$;68;;
Class.forName;org.apache.fop.cli.Main;org.dacapo.harness.Fop.<init>;26;;
Class.forName;org.apache.fop.datatypes.LengthBase;org.apache.fop.datatypes.LengthBase.class$;65;;
Class.forName;org.apache.fop.fo.ElementMapping;org.apache.fop.fo.ElementMappingRegistry.class$;44;;
Class.forName;org.apache.fop.fo.ElementMappingRegistry;org.apache.fop.fo.ElementMappingRegistry.class$;44;;
Class.forName;org.apache.fop.fo.FOElementMapping;org.apache.fop.fo.ElementMappingRegistry.addElementMapping;94;;
Class.forName;org.apache.fop.fo.FOEventHandler;org.apache.fop.render.RendererFactory.class$;44;;
Class.forName;org.apache.fop.fo.FONode;org.apache.fop.fo.FONode.class$;66;;
Class.forName;org.apache.fop.fo.FOText;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.FOTreeBuilder;org.apache.fop.fo.FOTreeBuilder.class$;54;;
Class.forName;org.apache.fop.fo.FObjMixed;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.PropertyList;org.apache.fop.fo.PropertyList.class$;60;;
Class.forName;org.apache.fop.fo.extensions.ExtensionElementMapping;org.apache.fop.fo.ElementMappingRegistry.addElementMapping;94;;
Class.forName;org.apache.fop.fo.extensions.OldExtensionElementMapping;org.apache.fop.fo.ElementMappingRegistry.addElementMapping;94;;
Class.forName;org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping;org.apache.fop.fo.ElementMappingRegistry.addElementMapping;94;;
Class.forName;org.apache.fop.fo.extensions.svg.SVGElementMapping;org.apache.fop.fo.ElementMappingRegistry.addElementMapping;94;;
Class.forName;org.apache.fop.fo.extensions.svg.SVGElementMapping;org.apache.fop.fo.extensions.svg.SVGElementMapping.class$;45;;
Class.forName;org.apache.fop.fo.extensions.xmp.RDFElementMapping;org.apache.fop.fo.ElementMappingRegistry.addElementMapping;94;;
Class.forName;org.apache.fop.fo.extensions.xmp.XMPElementMapping;org.apache.fop.fo.ElementMappingRegistry.addElementMapping;94;;
Class.forName;org.apache.fop.fo.flow.BasicLink;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.BidiOverride;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.Block;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.BlockContainer;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.Character;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.ExternalGraphic;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.Footnote;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.Inline;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.InlineContainer;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.InstreamForeignObject;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.Leader;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.ListBlock;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.ListItem;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.PageNumber;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.PageNumberCitation;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.PageNumberCitationLast;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.RetrieveMarker;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.Wrapper;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.table.BorderSpecification;org.apache.fop.fo.flow.table.BorderSpecification.class$;30;;
Class.forName;org.apache.fop.fo.flow.table.CollapsingBorderResolver;org.apache.fop.fo.flow.table.CollapsingBorderResolver.class$;71;;
Class.forName;org.apache.fop.fo.flow.table.ConditionalBorder;org.apache.fop.fo.flow.table.ConditionalBorder.class$;37;;
Class.forName;org.apache.fop.fo.flow.table.FixedColRowGroupBuilder;org.apache.fop.fo.flow.table.FixedColRowGroupBuilder.class$;35;;
Class.forName;org.apache.fop.fo.flow.table.GridUnit;org.apache.fop.fo.flow.table.GridUnit.class$;29;;
Class.forName;org.apache.fop.fo.flow.table.PrimaryGridUnit;org.apache.fop.fo.flow.table.PrimaryGridUnit.class$;35;;
Class.forName;org.apache.fop.fo.flow.table.Table;org.apache.fop.fo.flow.table.Table.class$;45;;
Class.forName;org.apache.fop.fo.flow.table.Table;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.table.TableBody;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.table.TableCell;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.table.TableColumn;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.table.TableFObj;org.apache.fop.fo.flow.table.TableFObj.class$;38;;
Class.forName;org.apache.fop.fo.flow.table.TableFooter;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.table.TableHeader;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.flow.table.TableRow;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.pagination.Title;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.fo.properties.CommonHyphenation;org.apache.fop.fo.properties.CommonHyphenation.class$;38;;
Class.forName;org.apache.fop.fo.properties.PropertyMaker;org.apache.fop.fo.properties.Property.class$;39;;
Class.forName;org.apache.fop.fo.properties.PropertyMaker;org.apache.fop.fo.properties.PropertyMaker.class$;46;;
Class.forName;org.apache.fop.fonts.Font;org.apache.fop.fonts.Font.class$;56;;
Class.forName;org.apache.fop.fonts.FontCache;org.apache.fop.fonts.FontCache.class$;50;;
Class.forName;org.apache.fop.fonts.FontInfo;org.apache.fop.fonts.FontInfo.class$;47;;
Class.forName;org.apache.fop.fonts.FontSetup;org.apache.fop.fonts.FontSetup.class$;57;;
Class.forName;org.apache.fop.fonts.FontTriplet;org.apache.fop.area.Trait.class$;228;;
Class.forName;org.apache.fop.image.loader.batik.ImageConverterWMF2G2D;org.apache.fop.image.loader.batik.ImageConverterWMF2G2D.class$;45;;
Class.forName;org.apache.fop.image.loader.batik.PreloaderSVG;org.apache.fop.image.loader.batik.PreloaderSVG.class$;59;;
Class.forName;org.apache.fop.image.loader.batik.PreloaderWMF;org.apache.fop.image.loader.batik.PreloaderWMF.class$;49;;
Class.forName;org.apache.fop.layoutmgr.AbstractBaseLayoutManager;org.apache.fop.layoutmgr.AbstractBaseLayoutManager.class$;47;;
Class.forName;org.apache.fop.layoutmgr.AbstractBreaker;org.apache.fop.layoutmgr.AbstractBreaker.class$;38;;
Class.forName;org.apache.fop.layoutmgr.AbstractLayoutManager;org.apache.fop.layoutmgr.AbstractLayoutManager.class$;47;;
Class.forName;org.apache.fop.layoutmgr.AbstractPageSequenceLayoutManager;org.apache.fop.layoutmgr.AbstractPageSequenceLayoutManager.class$;44;;
Class.forName;org.apache.fop.layoutmgr.BlockLayoutManager;org.apache.fop.layoutmgr.BlockLayoutManager.class$;51;;
Class.forName;org.apache.fop.layoutmgr.BlockStackingLayoutManager;org.apache.fop.layoutmgr.BlockStackingLayoutManager.class$;52;;
Class.forName;org.apache.fop.layoutmgr.BreakingAlgorithm;org.apache.fop.layoutmgr.BreakingAlgorithm.class$;45;;
Class.forName;org.apache.fop.layoutmgr.FlowLayoutManager;org.apache.fop.layoutmgr.FlowLayoutManager.class$;47;;
Class.forName;org.apache.fop.layoutmgr.LayoutManagerMapping;org.apache.fop.layoutmgr.LayoutManagerMapping.class$;96;;
Class.forName;org.apache.fop.layoutmgr.PageBreakingAlgorithm;org.apache.fop.layoutmgr.PageBreakingAlgorithm.class$;38;;
Class.forName;org.apache.fop.layoutmgr.PageProvider;org.apache.fop.layoutmgr.PageProvider.class$;44;;
Class.forName;org.apache.fop.layoutmgr.PageSequenceLayoutManager;org.apache.fop.layoutmgr.PageSequenceLayoutManager.class$;41;;
Class.forName;org.apache.fop.layoutmgr.SpaceResolver;org.apache.fop.layoutmgr.SpaceResolver.class$;39;;
Class.forName;org.apache.fop.layoutmgr.StaticContentLayoutManager;org.apache.fop.layoutmgr.StaticContentLayoutManager.class$;51;;
Class.forName;org.apache.fop.layoutmgr.TraitSetter;org.apache.fop.layoutmgr.TraitSetter.class$;44;;
Class.forName;org.apache.fop.layoutmgr.UnresolvedListElementWithLength;org.apache.fop.layoutmgr.UnresolvedListElementWithLength.class$;33;;
Class.forName;org.apache.fop.layoutmgr.inline.BasicScaledBaselineTable;org.apache.fop.layoutmgr.inline.BasicScaledBaselineTable.class$;37;;
Class.forName;org.apache.fop.layoutmgr.inline.InlineLayoutManager;org.apache.fop.layoutmgr.inline.InlineLayoutManager.class$;69;;
Class.forName;org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager;org.apache.fop.layoutmgr.inline.LeafNodeLayoutManager.class$;57;;
Class.forName;org.apache.fop.layoutmgr.inline.LineLayoutManager;org.apache.fop.layoutmgr.inline.LineLayoutManager.class$;84;;
Class.forName;org.apache.fop.layoutmgr.inline.LineLayoutPossibilities;org.apache.fop.layoutmgr.inline.LineLayoutPossibilities.class$;31;;
Class.forName;org.apache.fop.layoutmgr.inline.TextLayoutManager;org.apache.fop.layoutmgr.inline.TextLayoutManager.class$;113;;
Class.forName;org.apache.fop.layoutmgr.list.ListBlockLayoutManager;org.apache.fop.layoutmgr.list.ListBlockLayoutManager.class$;56;;
Class.forName;org.apache.fop.layoutmgr.list.ListItemLayoutManager;org.apache.fop.layoutmgr.list.ListItemLayoutManager.class$;66;;
Class.forName;org.apache.fop.layoutmgr.table.ActiveCell;org.apache.fop.layoutmgr.table.ActiveCell.class$;44;;
Class.forName;org.apache.fop.layoutmgr.table.ColumnSetup;org.apache.fop.layoutmgr.table.ColumnSetup.class$;42;;
Class.forName;org.apache.fop.layoutmgr.table.RowGroupLayoutManager;org.apache.fop.layoutmgr.table.RowGroupLayoutManager.class$;43;;
Class.forName;org.apache.fop.layoutmgr.table.RowPainter;org.apache.fop.layoutmgr.table.RowPainter.class$;46;;
Class.forName;org.apache.fop.layoutmgr.table.TableCellLayoutManager;org.apache.fop.layoutmgr.table.TableCellLayoutManager.class$;68;;
Class.forName;org.apache.fop.layoutmgr.table.TableContentLayoutManager;org.apache.fop.layoutmgr.table.TableContentLayoutManager.class$;57;;
Class.forName;org.apache.fop.layoutmgr.table.TableLayoutManager;org.apache.fop.layoutmgr.table.TableLayoutManager.class$;66;;
Class.forName;org.apache.fop.layoutmgr.table.TableStepper;org.apache.fop.layoutmgr.table.TableStepper.class$;46;;
Class.forName;org.apache.fop.pdf.PDFDocument;org.apache.fop.pdf.PDFICCBasedColorSpace.class$;137;;
Class.forName;org.apache.fop.pdf.PDFEncryptionManager;org.apache.fop.pdf.PDFEncryptionManager.class$;37;;
Class.forName;org.apache.fop.pdf.PDFFactory;org.apache.fop.pdf.PDFFactory.class$;67;;
Class.forName;org.apache.fop.pdf.PDFObject;org.apache.fop.pdf.PDFObject.class$;45;;
Class.forName;org.apache.fop.render.AbstractGenericSVGHandler;org.apache.fop.render.AbstractGenericSVGHandler.class$;50;;
Class.forName;org.apache.fop.render.AbstractRendererConfigurator;org.apache.fop.render.AbstractRendererConfigurator.class$;35;;
Class.forName;org.apache.fop.render.PrintRendererConfigurator;org.apache.fop.render.PrintRendererConfigurator.class$;62;;
Class.forName;org.apache.fop.render.Renderer;org.apache.fop.render.Renderer$1.class$;52;;
Class.forName;org.apache.fop.render.Renderer;org.apache.fop.render.RendererFactory.class$;44;;
Class.forName;org.apache.fop.render.RendererFactory;org.apache.fop.render.RendererFactory.class$;44;;
Class.forName;org.apache.fop.render.XMLHandler;org.apache.fop.render.XMLHandlerRegistry.class$;39;;
Class.forName;org.apache.fop.render.XMLHandlerRegistry;org.apache.fop.render.XMLHandlerRegistry.class$;39;;
Class.forName;org.apache.fop.render.afp.extensions.AFPElementMapping;org.apache.fop.fo.ElementMappingRegistry.addElementMapping;94;;
Class.forName;org.apache.fop.render.pcl.extensions.PCLElementMapping;org.apache.fop.fo.ElementMappingRegistry.addElementMapping;94;;
Class.forName;org.apache.fop.render.pdf.PDFImageHandler;org.apache.fop.render.pdf.PDFImageHandlerRegistry.class$;43;;
Class.forName;org.apache.fop.render.pdf.PDFImageHandlerRegistry;org.apache.fop.render.pdf.PDFImageHandlerRegistry.class$;43;;
Class.forName;org.apache.fop.render.pdf.PDFSVGHandler;org.apache.fop.render.pdf.PDFSVGHandler.class$;67;;
Class.forName;org.apache.fop.render.ps.extensions.PSExtensionElementMapping;org.apache.fop.fo.ElementMappingRegistry.addElementMapping;94;;
Class.forName;org.apache.fop.traits.BorderProps;org.apache.fop.area.Trait.class$;228;;
Class.forName;org.apache.fop.util.ColorSpaceCache;org.apache.fop.util.ColorSpaceCache.class$;40;;
Class.forName;org.apache.fop.util.ColorUtil;org.apache.fop.util.ColorUtil.class$;51;;
Class.forName;org.apache.fop.util.CommandLineLogger;org.apache.fop.cli.CommandLineOptions.class$;123;;
Class.forName;org.apache.fop.util.ContentHandlerFactory;org.apache.fop.util.ContentHandlerFactoryRegistry.class$;38;;
Class.forName;org.apache.fop.util.ContentHandlerFactoryRegistry;org.apache.fop.util.ContentHandlerFactoryRegistry.class$;38;;
Class.forName;org.apache.xmlgraphics.fonts.Glyphs;org.apache.xmlgraphics.fonts.Glyphs.class$;295;;
Class.forName;org.apache.xmlgraphics.image.loader.ImageManager;org.apache.xmlgraphics.image.loader.ImageManager.class$;45;;
Class.forName;org.apache.xmlgraphics.image.loader.cache.ImageCache;org.apache.xmlgraphics.image.loader.cache.ImageCache.class$;51;;
Class.forName;org.apache.xmlgraphics.image.loader.impl.AbstractImageSessionContext;org.apache.xmlgraphics.image.loader.impl.AbstractImageSessionContext.class$;52;;
Class.forName;org.apache.xmlgraphics.image.loader.impl.ImageGraphics2D;org.apache.fop.render.pdf.PDFImageHandlerGraphics2D.class$;60;;
Class.forName;org.apache.xmlgraphics.image.loader.impl.ImageRawCCITTFax;org.apache.fop.render.pdf.PDFImageHandlerRawCCITTFax.class$;75;;
Class.forName;org.apache.xmlgraphics.image.loader.impl.ImageRawJPEG;org.apache.fop.render.pdf.PDFImageHandlerRawJPEG.class$;75;;
Class.forName;org.apache.xmlgraphics.image.loader.impl.ImageRendered;org.apache.fop.render.pdf.PDFImageHandlerRenderedImage.class$;76;;
Class.forName;org.apache.xmlgraphics.image.loader.impl.ImageXMLDOM;org.apache.fop.render.pdf.PDFImageHandlerXML.class$;66;;
Class.forName;org.apache.xmlgraphics.image.loader.impl.PreloaderEPS$EPSBinaryFileHeader;org.apache.xmlgraphics.image.loader.impl.PreloaderEPS.class$;49;;
Class.forName;org.apache.xmlgraphics.image.loader.pipeline.PipelineFactory;org.apache.xmlgraphics.image.loader.pipeline.PipelineFactory.class$;50;;
Class.forName;org.apache.xmlgraphics.image.loader.spi.ImageConverter;org.apache.xmlgraphics.image.loader.spi.ImageImplRegistry.class$;44;;
Class.forName;org.apache.xmlgraphics.image.loader.spi.ImageImplRegistry;org.apache.xmlgraphics.image.loader.spi.ImageImplRegistry.class$;44;;
Class.forName;org.apache.xmlgraphics.image.loader.spi.ImageLoaderFactory;org.apache.xmlgraphics.image.loader.spi.ImageImplRegistry.class$;44;;
Class.forName;org.apache.xmlgraphics.image.loader.spi.ImagePreloader;org.apache.xmlgraphics.image.loader.spi.ImageImplRegistry.class$;44;;
Class.forName;org.apache.xmlgraphics.image.loader.util.SoftMapCache;org.apache.xmlgraphics.image.loader.util.SoftMapCache.class$;38;;
Class.forName;org.dacapo.harness.Fop;org.dacapo.harness.TestHarness.findClass;281;;
Class.forName;sun.java2d.cmm.lcms.LcmsServiceProvider;java.util.ServiceLoader$LazyIterator.nextService;370;;
Class.forName;sun.net.www.protocol.jar.Handler;java.net.URL.getURLStreamHandler;1175;;
Class.forName;sun.nio.cs.IBM850;sun.nio.cs.FastCharsetProvider.lookup;118;;
Class.forName;sun.nio.cs.ISO_8859_13;sun.nio.cs.FastCharsetProvider.lookup;118;;
Class.forName;sun.nio.cs.ISO_8859_15;sun.nio.cs.FastCharsetProvider.lookup;118;;
Class.forName;sun.nio.cs.ISO_8859_2;sun.nio.cs.FastCharsetProvider.lookup;118;;
Class.forName;sun.nio.cs.ISO_8859_4;sun.nio.cs.FastCharsetProvider.lookup;118;;
Class.forName;sun.nio.cs.ISO_8859_5;sun.nio.cs.FastCharsetProvider.lookup;118;;
Class.forName;sun.nio.cs.ISO_8859_7;sun.nio.cs.FastCharsetProvider.lookup;118;;
Class.forName;sun.nio.cs.ISO_8859_9;sun.nio.cs.FastCharsetProvider.lookup;118;;
Class.forName;sun.nio.cs.KOI8_R;sun.nio.cs.FastCharsetProvider.lookup;118;;
Class.forName;sun.nio.cs.MS1250;sun.nio.cs.FastCharsetProvider.lookup;118;;
Class.forName;sun.nio.cs.MS1251;sun.nio.cs.FastCharsetProvider.lookup;118;;
Class.forName;sun.nio.cs.MS1252;sun.nio.cs.FastCharsetProvider.lookup;118;;
Class.forName;sun.nio.cs.ext.Big5;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.EUC_CN;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.EUC_JP;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.EUC_KR;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.EUC_TW;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.ExtendedCharsets;java.nio.charset.Charset$ExtendedProviderHolder$1.run;435;;
Class.forName;sun.nio.cs.ext.IBM037;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.IBM1047;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.IBM277;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.IBM278;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.IBM280;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.IBM284;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.IBM285;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.IBM297;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.IBM420;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.IBM424;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.IBM500;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.IBM860;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.IBM870;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.IBM871;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.IBM918;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.ISO2022_JP;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.ISO2022_KR;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.ISO_8859_11;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.ISO_8859_3;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.ISO_8859_6;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.ISO_8859_8;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.MacRoman;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.nio.cs.ext.SJIS;sun.nio.cs.AbstractCharsetProvider.lookup;142;;
Class.forName;sun.security.provider.MD5;java.security.Provider$Service.getImplClass;1634;;
Class.forName;sun.security.provider.SHA;java.security.Provider$Service.getImplClass;1634;;
Class.forName;sun.util.logging.PlatformLogger$DefaultLoggerProxy;sun.util.logging.PlatformLogger.<clinit>;173;;
Class.forName;sun.util.logging.PlatformLogger$JavaLoggerProxy;sun.util.logging.PlatformLogger.<clinit>;176;;
Class.getDeclaredField;<java.lang.invoke.BoundMethodHandle$Species_L3: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;java.lang.invoke.BoundMethodHandle$Factory.setSpeciesDataToConcreteBMHClass;790;isAccessible=false;
Class.getDeclaredField;<java.lang.invoke.BoundMethodHandle$Species_L4: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;java.lang.invoke.BoundMethodHandle$Factory.setSpeciesDataToConcreteBMHClass;790;isAccessible=false;
Class.getDeclaredField;<java.lang.invoke.BoundMethodHandle$Species_LL: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;java.lang.invoke.BoundMethodHandle$Factory.setSpeciesDataToConcreteBMHClass;790;isAccessible=false;
Class.getDeclaredField;<java.lang.invoke.CallSite: java.lang.invoke.MethodHandle target>;java.lang.invoke.CallSite.<clinit>;252;isAccessible=false;
Class.getDeclaredField;<java.lang.invoke.MethodHandle: java.lang.invoke.LambdaForm form>;java.lang.invoke.MethodHandle.<clinit>;1451;isAccessible=false;
Class.getDeclaredField;<java.lang.invoke.MethodType: java.lang.Class rtype>;java.lang.invoke.MethodType.<clinit>;1184;isAccessible=false;
Class.getDeclaredField;<java.lang.invoke.MethodType: java.lang.Class[] ptypes>;java.lang.invoke.MethodType.<clinit>;1186;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.CopyOnWriteArrayList: java.util.concurrent.locks.ReentrantLock lock>;java.util.concurrent.CopyOnWriteArrayList.<clinit>;1681;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.atomic.AtomicBoolean: int value>;java.util.concurrent.atomic.AtomicBoolean.<clinit>;59;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.atomic.AtomicMarkableReference: java.util.concurrent.atomic.AtomicMarkableReference$Pair pair>;java.util.concurrent.atomic.AtomicMarkableReference.objectFieldOffset;204;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: int waitStatus>;java.util.concurrent.locks.AbstractQueuedSynchronizer.<clinit>;2276;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node next>;java.util.concurrent.locks.AbstractQueuedSynchronizer.<clinit>;2278;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.locks.AbstractQueuedSynchronizer: int state>;java.util.concurrent.locks.AbstractQueuedSynchronizer.<clinit>;2270;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node head>;java.util.concurrent.locks.AbstractQueuedSynchronizer.<clinit>;2272;isAccessible=false;
Class.getDeclaredField;<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node tail>;java.util.concurrent.locks.AbstractQueuedSynchronizer.<clinit>;2274;isAccessible=false;
Class.getDeclaredField;<java.util.logging.LoggingProxyImpl: sun.util.logging.LoggingProxy INSTANCE>;sun.util.logging.LoggingSupport$1.run;55;isAccessible=false;
Class.getDeclaredMethod;<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>;org.apache.commons.logging.impl.LogFactoryImpl.isJdk14Available;489;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.MethodHandle getTarget()>;java.lang.invoke.DelegatingMethodHandle.<clinit>;159;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle: java.lang.Object allocateInstance(java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;681;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle: java.lang.Object checkBase(java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;673;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle: java.lang.Object checkCast(java.lang.Object,java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;679;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle: java.lang.Object constructorMethod(java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;683;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle: java.lang.Object internalMemberName(java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;665;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle: java.lang.Object internalMemberNameEnsureInit(java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;667;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle: java.lang.Object staticBase(java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;675;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle: long fieldOffset(java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;671;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle: long staticOffset(java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;677;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.DirectMethodHandle: void ensureInitialized(java.lang.Object)>;java.lang.invoke.DirectMethodHandle$Lazy.<clinit>;669;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.Invokers: java.lang.Object checkGenericType(java.lang.Object,java.lang.Object)>;java.lang.invoke.Invokers.<clinit>;425;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.Invokers: java.lang.Object getCallSiteTarget(java.lang.Object)>;java.lang.invoke.Invokers.<clinit>;427;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.Invokers: void checkCustomized(java.lang.Object)>;java.lang.invoke.Invokers.<clinit>;429;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.Invokers: void checkExactType(java.lang.Object,java.lang.Object)>;java.lang.invoke.Invokers.<clinit>;423;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.MethodHandleImpl: boolean profileBoolean(boolean,int[])>;java.lang.invoke.MethodHandleImpl$Lazy.<clinit>;618;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.MethodHandleImpl: java.lang.Object guardWithCatch(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle,java.lang.Object[])>;java.lang.invoke.MethodHandleImpl$Lazy.<clinit>;615;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.MethodHandleImpl: sun.invoke.empty.Empty throwException(java.lang.Throwable)>;java.lang.invoke.MethodHandleImpl$Lazy.<clinit>;617;isAccessible=false;
Class.getDeclaredMethod;<java.lang.invoke.MethodHandleImpl: void checkSpreadArgument(java.lang.Object,int)>;java.lang.invoke.MethodHandleImpl$Lazy.<clinit>;614;isAccessible=false;
Class.getMethod;<Harness: void main(java.lang.String[])>;sun.launcher.LauncherHelper.validateMainClass;544;isAccessible=false;
Class.getMethod;<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>;org.apache.commons.logging.LogFactory.getContextClassLoader;438;isAccessible=false;
Class.getMethod;<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFileSuffixes()>;javax.imageio.ImageIO.<clinit>;668;isAccessible=false;
Class.getMethod;<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFileSuffixes()>;javax.imageio.ImageIO.<clinit>;675;isAccessible=false;
Class.getMethod;<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFormatNames()>;javax.imageio.ImageIO.<clinit>;666;isAccessible=false;
Class.getMethod;<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFormatNames()>;javax.imageio.ImageIO.<clinit>;673;isAccessible=false;
Class.getMethod;<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getMIMETypes()>;javax.imageio.ImageIO.<clinit>;670;isAccessible=false;
Class.getMethod;<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getMIMETypes()>;javax.imageio.ImageIO.<clinit>;677;isAccessible=false;
Class.getMethod;<org.apache.fop.cli.Main: void startFOP(java.lang.String[])>;org.dacapo.harness.Fop.<init>;27;isAccessible=false;
Class.newInstance;com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl;javax.xml.transform.FactoryFinder.newInstance;178;;
Class.newInstance;com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl;javax.xml.parsers.FactoryFinder.newInstance;192;;
Class.newInstance;java.awt.EventQueue;sun.awt.SunToolkit.initEQ;120;;
Class.newInstance;org.apache.batik.extension.svg.BatikDomExtension;org.apache.batik.util.Service.providers;;;
Class.newInstance;org.apache.commons.logging.impl.LogFactoryImpl;org.apache.commons.logging.LogFactory$2.run;531;;
Class.newInstance;org.apache.fop.fo.FOElementMapping;org.apache.fop.fo.ElementMappingRegistry.addElementMapping;94;;
Class.newInstance;org.apache.fop.fo.extensions.ExtensionElementMapping;org.apache.fop.fo.ElementMappingRegistry.addElementMapping;94;;
Class.newInstance;org.apache.fop.fo.extensions.OldExtensionElementMapping;org.apache.fop.fo.ElementMappingRegistry.addElementMapping;94;;
Class.newInstance;org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping;org.apache.fop.fo.ElementMappingRegistry.addElementMapping;94;;
Class.newInstance;org.apache.fop.fo.extensions.svg.SVGElementMapping;org.apache.fop.fo.ElementMappingRegistry.addElementMapping;94;;
Class.newInstance;org.apache.fop.fo.extensions.xmp.RDFElementMapping;org.apache.fop.fo.ElementMappingRegistry.addElementMapping;94;;
Class.newInstance;org.apache.fop.fo.extensions.xmp.XMPContentHandlerFactory;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.fo.extensions.xmp.XMPElementMapping;org.apache.fop.fo.ElementMappingRegistry.addElementMapping;94;;
Class.newInstance;org.apache.fop.image.loader.batik.ImageConverterSVG2G2D;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.image.loader.batik.ImageConverterWMF2G2D;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.image.loader.batik.ImageLoaderFactorySVG;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.image.loader.batik.ImageLoaderFactoryWMF;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.image.loader.batik.PreloaderSVG;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.image.loader.batik.PreloaderWMF;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.render.afp.AFPRendererMaker;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.render.afp.extensions.AFPElementMapping;org.apache.fop.fo.ElementMappingRegistry.addElementMapping;94;;
Class.newInstance;org.apache.fop.render.afp.extensions.AFPExtensionHandlerFactory;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.render.awt.AWTRendererMaker;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.render.bitmap.PNGRendererMaker;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.render.bitmap.TIFFRendererMaker;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.render.pcl.PCLRendererMaker;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.render.pcl.extensions.PCLElementMapping;org.apache.fop.fo.ElementMappingRegistry.addElementMapping;94;;
Class.newInstance;org.apache.fop.render.pdf.PDFImageHandlerGraphics2D;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.render.pdf.PDFImageHandlerRawCCITTFax;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.render.pdf.PDFImageHandlerRawJPEG;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.render.pdf.PDFImageHandlerRenderedImage;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.render.pdf.PDFImageHandlerXML;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.render.pdf.PDFRendererMaker;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.render.pdf.PDFSVGHandler;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.render.print.PrintRendererMaker;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.render.ps.PSRendererMaker;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.render.ps.extensions.PSExtensionElementMapping;org.apache.fop.fo.ElementMappingRegistry.addElementMapping;94;;
Class.newInstance;org.apache.fop.render.ps.extensions.PSExtensionHandlerFactory;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.render.rtf.RTFFOEventHandlerMaker;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.render.txt.TXTRendererMaker;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.fop.render.xml.XMLRendererMaker;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.xmlgraphics.image.loader.impl.ImageConverterBitmap2G2D;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.xmlgraphics.image.loader.impl.ImageConverterBuffered2Rendered;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.xmlgraphics.image.loader.impl.ImageConverterG2D2Bitmap;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.xmlgraphics.image.loader.impl.ImageConverterRendered2PNG;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.xmlgraphics.image.loader.impl.ImageLoaderFactoryEPS;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.xmlgraphics.image.loader.impl.ImageLoaderFactoryInternalTIFF;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.xmlgraphics.image.loader.impl.ImageLoaderFactoryRaw;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.xmlgraphics.image.loader.impl.ImageLoaderFactoryRawCCITTFax;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.xmlgraphics.image.loader.impl.PreloaderBMP;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.xmlgraphics.image.loader.impl.PreloaderEMF;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.xmlgraphics.image.loader.impl.PreloaderEPS;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.xmlgraphics.image.loader.impl.PreloaderGIF;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.xmlgraphics.image.loader.impl.PreloaderJPEG;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.xmlgraphics.image.loader.impl.PreloaderTIFF;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.xmlgraphics.image.loader.impl.imageio.ImageLoaderFactoryImageIO;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;org.apache.xmlgraphics.image.loader.impl.imageio.PreloaderImageIO;org.apache.xmlgraphics.util.Service.providers;137;;
Class.newInstance;sun.awt.resources.awt;java.util.ResourceBundle$Control.newBundle;2645;;
Class.newInstance;sun.java2d.cmm.lcms.LcmsServiceProvider;java.util.ServiceLoader$LazyIterator.nextService;380;;
Class.newInstance;sun.net.www.protocol.jar.Handler;java.net.URL.getURLStreamHandler;1184;;
Class.newInstance;sun.nio.cs.IBM850;sun.nio.cs.FastCharsetProvider.lookup;121;;
Class.newInstance;sun.nio.cs.ISO_8859_13;sun.nio.cs.FastCharsetProvider.lookup;121;;
Class.newInstance;sun.nio.cs.ISO_8859_15;sun.nio.cs.FastCharsetProvider.lookup;121;;
Class.newInstance;sun.nio.cs.ISO_8859_2;sun.nio.cs.FastCharsetProvider.lookup;121;;
Class.newInstance;sun.nio.cs.ISO_8859_4;sun.nio.cs.FastCharsetProvider.lookup;121;;
Class.newInstance;sun.nio.cs.ISO_8859_5;sun.nio.cs.FastCharsetProvider.lookup;121;;
Class.newInstance;sun.nio.cs.ISO_8859_7;sun.nio.cs.FastCharsetProvider.lookup;121;;
Class.newInstance;sun.nio.cs.ISO_8859_9;sun.nio.cs.FastCharsetProvider.lookup;121;;
Class.newInstance;sun.nio.cs.KOI8_R;sun.nio.cs.FastCharsetProvider.lookup;121;;
Class.newInstance;sun.nio.cs.MS1250;sun.nio.cs.FastCharsetProvider.lookup;121;;
Class.newInstance;sun.nio.cs.MS1251;sun.nio.cs.FastCharsetProvider.lookup;121;;
Class.newInstance;sun.nio.cs.MS1252;sun.nio.cs.FastCharsetProvider.lookup;121;;
Class.newInstance;sun.nio.cs.ext.Big5;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.EUC_CN;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.EUC_JP;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.EUC_KR;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.EUC_TW;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.ExtendedCharsets;java.nio.charset.Charset$ExtendedProviderHolder$1.run;436;;
Class.newInstance;sun.nio.cs.ext.IBM037;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.IBM1047;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.IBM277;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.IBM278;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.IBM280;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.IBM284;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.IBM285;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.IBM297;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.IBM420;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.IBM424;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.IBM500;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.IBM860;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.IBM870;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.IBM871;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.IBM918;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.ISO2022_JP;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.ISO2022_KR;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.ISO_8859_11;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.ISO_8859_3;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.ISO_8859_6;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.ISO_8859_8;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.MacRoman;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.nio.cs.ext.SJIS;sun.nio.cs.AbstractCharsetProvider.lookup;146;;
Class.newInstance;sun.reflect.GeneratedConstructorAccessor1;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.reflect.GeneratedMethodAccessor1;sun.reflect.MethodAccessorGenerator$1.run;403;;
Class.newInstance;sun.security.provider.Sun;sun.security.jca.ProviderConfig$2.run;221;;
Class.newInstance;sun.text.resources.FormatData;java.util.ResourceBundle$Control.newBundle;2645;;
Class.newInstance;sun.text.resources.en.FormatData_en;java.util.ResourceBundle$Control.newBundle;2645;;
Class.newInstance;sun.text.resources.en.FormatData_en_AU;java.util.ResourceBundle$Control.newBundle;2645;;
Class.newInstance;sun.text.resources.en.FormatData_en_US;java.util.ResourceBundle$Control.newBundle;2645;;
Class.newInstance;sun.util.logging.resources.logging;java.util.ResourceBundle$Control.newBundle;2645;;
Class.newInstance;sun.util.resources.CalendarData;java.util.ResourceBundle$Control.newBundle;2645;;
Class.newInstance;sun.util.resources.CurrencyNames;java.util.ResourceBundle$Control.newBundle;2645;;
Class.newInstance;sun.util.resources.en.CalendarData_en;java.util.ResourceBundle$Control.newBundle;2645;;
Class.newInstance;sun.util.resources.en.CurrencyNames_en_AU;java.util.ResourceBundle$Control.newBundle;2645;;
Class.newInstance;sun.util.resources.en.CurrencyNames_en_US;java.util.ResourceBundle$Control.newBundle;2645;;
Constructor.getModifiers;<com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<java.awt.EventQueue: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.batik.extension.svg.BatikDomExtension: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.commons.logging.impl.Jdk14Logger: void <init>(java.lang.String)>;sun.reflect.NativeConstructorAccessorImpl.newInstance;58;isAccessible=false;
Constructor.getModifiers;<org.apache.commons.logging.impl.LogFactoryImpl: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.fo.FOElementMapping: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.fo.extensions.ExtensionElementMapping: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.fo.extensions.OldExtensionElementMapping: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.fo.extensions.svg.SVGElementMapping: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.fo.extensions.xmp.RDFElementMapping: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.fo.extensions.xmp.XMPContentHandlerFactory: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.fo.extensions.xmp.XMPElementMapping: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.image.loader.batik.ImageConverterSVG2G2D: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.image.loader.batik.ImageConverterWMF2G2D: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.image.loader.batik.ImageLoaderFactorySVG: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.image.loader.batik.ImageLoaderFactoryWMF: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.image.loader.batik.PreloaderSVG: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.image.loader.batik.PreloaderWMF: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.afp.AFPRendererMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.afp.extensions.AFPElementMapping: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.afp.extensions.AFPExtensionHandlerFactory: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.awt.AWTRendererMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.bitmap.PNGRendererMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.bitmap.TIFFRendererMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.pcl.PCLRendererMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.pcl.extensions.PCLElementMapping: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.pdf.PDFImageHandlerGraphics2D: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.pdf.PDFImageHandlerRawCCITTFax: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.pdf.PDFImageHandlerRawJPEG: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.pdf.PDFImageHandlerRenderedImage: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.pdf.PDFImageHandlerXML: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.pdf.PDFRendererMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.pdf.PDFSVGHandler: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.print.PrintRendererMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.ps.PSRendererMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.ps.extensions.PSExtensionElementMapping: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.ps.extensions.PSExtensionHandlerFactory: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.rtf.RTFFOEventHandlerMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.txt.TXTRendererMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.fop.render.xml.XMLRendererMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.xmlgraphics.image.loader.impl.ImageConverterBitmap2G2D: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.xmlgraphics.image.loader.impl.ImageConverterBuffered2Rendered: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.xmlgraphics.image.loader.impl.ImageConverterG2D2Bitmap: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.xmlgraphics.image.loader.impl.ImageConverterRendered2PNG: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.xmlgraphics.image.loader.impl.ImageLoaderFactoryEPS: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.xmlgraphics.image.loader.impl.ImageLoaderFactoryInternalTIFF: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.xmlgraphics.image.loader.impl.ImageLoaderFactoryRaw: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.xmlgraphics.image.loader.impl.ImageLoaderFactoryRawCCITTFax: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.xmlgraphics.image.loader.impl.PreloaderBMP: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.xmlgraphics.image.loader.impl.PreloaderEMF: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.xmlgraphics.image.loader.impl.PreloaderEPS: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.xmlgraphics.image.loader.impl.PreloaderGIF: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.xmlgraphics.image.loader.impl.PreloaderJPEG: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.xmlgraphics.image.loader.impl.PreloaderTIFF: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.xmlgraphics.image.loader.impl.imageio.ImageLoaderFactoryImageIO: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<org.apache.xmlgraphics.image.loader.impl.imageio.PreloaderImageIO: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.awt.resources.awt: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.java2d.cmm.lcms.LcmsServiceProvider: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.net.www.protocol.jar.Handler: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.IBM850: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ISO_8859_13: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ISO_8859_15: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ISO_8859_2: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ISO_8859_4: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ISO_8859_5: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ISO_8859_7: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ISO_8859_9: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.KOI8_R: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.MS1250: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.MS1251: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.MS1252: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.Big5: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.EUC_CN: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.EUC_JP: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.EUC_KR: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.EUC_TW: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.ExtendedCharsets: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.IBM037: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.IBM1047: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.IBM277: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.IBM278: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.IBM280: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.IBM284: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.IBM285: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.IBM297: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.IBM420: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.IBM424: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.IBM500: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.IBM860: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.IBM870: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.IBM871: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.IBM918: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.ISO2022_JP: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.ISO2022_KR: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.ISO_8859_11: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.ISO_8859_3: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.ISO_8859_6: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.ISO_8859_8: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.MacRoman: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.nio.cs.ext.SJIS: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.reflect.GeneratedConstructorAccessor1: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.reflect.GeneratedMethodAccessor1: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.security.provider.Sun: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.FormatData: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.en.FormatData_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.en.FormatData_en_AU: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.text.resources.en.FormatData_en_US: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.logging.resources.logging: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.CalendarData: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.CurrencyNames: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.en.CalendarData_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.en.CurrencyNames_en_AU: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.getModifiers;<sun.util.resources.en.CurrencyNames_en_US: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<java.awt.EventQueue: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<java.awt.GraphicsEnvironment$$Lambda$1.1845904670: void <init>()>;java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite;215;isAccessible=true;
Constructor.newInstance;<org.apache.batik.extension.svg.BatikDomExtension: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.commons.logging.impl.Jdk14Logger: void <init>(java.lang.String)>;org.apache.commons.logging.impl.LogFactoryImpl.newInstance;529;isAccessible=false;
Constructor.newInstance;<org.apache.commons.logging.impl.LogFactoryImpl: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.fo.FOElementMapping: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.fo.extensions.ExtensionElementMapping: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.fo.extensions.OldExtensionElementMapping: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.fo.extensions.svg.BatikExtensionElementMapping: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.fo.extensions.svg.SVGElementMapping: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.fo.extensions.xmp.RDFElementMapping: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.fo.extensions.xmp.XMPContentHandlerFactory: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.fo.extensions.xmp.XMPElementMapping: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.image.loader.batik.ImageConverterSVG2G2D: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.image.loader.batik.ImageConverterWMF2G2D: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.image.loader.batik.ImageLoaderFactorySVG: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.image.loader.batik.ImageLoaderFactoryWMF: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.image.loader.batik.PreloaderSVG: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.image.loader.batik.PreloaderWMF: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.afp.AFPRendererMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.afp.extensions.AFPElementMapping: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.afp.extensions.AFPExtensionHandlerFactory: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.awt.AWTRendererMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.bitmap.PNGRendererMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.bitmap.TIFFRendererMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.pcl.PCLRendererMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.pcl.extensions.PCLElementMapping: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.pdf.PDFImageHandlerGraphics2D: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.pdf.PDFImageHandlerRawCCITTFax: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.pdf.PDFImageHandlerRawJPEG: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.pdf.PDFImageHandlerRenderedImage: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.pdf.PDFImageHandlerXML: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.pdf.PDFRendererMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.pdf.PDFSVGHandler: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.print.PrintRendererMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.ps.PSRendererMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.ps.extensions.PSExtensionElementMapping: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.ps.extensions.PSExtensionHandlerFactory: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.rtf.RTFFOEventHandlerMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.txt.TXTRendererMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.fop.render.xml.XMLRendererMaker: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.xmlgraphics.image.loader.impl.ImageConverterBitmap2G2D: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.xmlgraphics.image.loader.impl.ImageConverterBuffered2Rendered: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.xmlgraphics.image.loader.impl.ImageConverterG2D2Bitmap: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.xmlgraphics.image.loader.impl.ImageConverterRendered2PNG: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.xmlgraphics.image.loader.impl.ImageLoaderFactoryEPS: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.xmlgraphics.image.loader.impl.ImageLoaderFactoryInternalTIFF: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.xmlgraphics.image.loader.impl.ImageLoaderFactoryRaw: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.xmlgraphics.image.loader.impl.ImageLoaderFactoryRawCCITTFax: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.xmlgraphics.image.loader.impl.PreloaderBMP: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.xmlgraphics.image.loader.impl.PreloaderEMF: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.xmlgraphics.image.loader.impl.PreloaderEPS: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.xmlgraphics.image.loader.impl.PreloaderGIF: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.xmlgraphics.image.loader.impl.PreloaderJPEG: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.xmlgraphics.image.loader.impl.PreloaderTIFF: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.xmlgraphics.image.loader.impl.imageio.ImageLoaderFactoryImageIO: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.apache.xmlgraphics.image.loader.impl.imageio.PreloaderImageIO: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<org.dacapo.harness.Fop: void <init>(org.dacapo.parser.Config,java.io.File)>;org.dacapo.harness.TestHarness.runBenchmark;211;isAccessible=false;
Constructor.newInstance;<sun.awt.resources.awt: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.java2d.Disposer$$Lambda$2.336484883: void <init>()>;java.lang.invoke.InnerClassLambdaMetafactory.buildCallSite;215;isAccessible=true;
Constructor.newInstance;<sun.java2d.cmm.lcms.LcmsServiceProvider: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.net.www.protocol.jar.Handler: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.IBM850: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ISO_8859_13: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ISO_8859_15: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ISO_8859_2: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ISO_8859_4: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ISO_8859_5: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ISO_8859_7: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ISO_8859_9: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.KOI8_R: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.MS1250: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.MS1251: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.MS1252: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.Big5: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.EUC_CN: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.EUC_JP: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.EUC_KR: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.EUC_TW: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.ExtendedCharsets: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.IBM037: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.IBM1047: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.IBM277: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.IBM278: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.IBM280: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.IBM284: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.IBM285: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.IBM297: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.IBM420: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.IBM424: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.IBM500: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.IBM860: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.IBM870: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.IBM871: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.IBM918: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.ISO2022_JP: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.ISO2022_KR: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.ISO_8859_11: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.ISO_8859_3: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.ISO_8859_6: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.ISO_8859_8: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.MacRoman: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.nio.cs.ext.SJIS: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedConstructorAccessor1: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.reflect.GeneratedMethodAccessor1: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.security.provider.MD5: void <init>()>;java.security.Provider$Service.newInstance;1595;isAccessible=false;
Constructor.newInstance;<sun.security.provider.SHA: void <init>()>;java.security.Provider$Service.newInstance;1595;isAccessible=false;
Constructor.newInstance;<sun.security.provider.Sun: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.FormatData: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.en.FormatData_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.en.FormatData_en_AU: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.text.resources.en.FormatData_en_US: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.logging.resources.logging: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CalendarData: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.CurrencyNames: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.en.CalendarData_en: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.en.CurrencyNames_en_AU: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Constructor.newInstance;<sun.util.resources.en.CurrencyNames_en_US: void <init>()>;java.lang.Class.newInstance;;isAccessible=true;
Field.get*;<java.util.logging.LoggingProxyImpl: sun.util.logging.LoggingProxy INSTANCE>;sun.util.logging.LoggingSupport$1.run;57;isAccessible=true;
Field.getDeclaringClass;<java.lang.invoke.BoundMethodHandle$Species_L3: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;43;isAccessible=false;
Field.getDeclaringClass;<java.lang.invoke.BoundMethodHandle$Species_L4: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;43;isAccessible=false;
Field.getDeclaringClass;<java.lang.invoke.BoundMethodHandle$Species_LL: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;43;isAccessible=false;
Field.getDeclaringClass;<java.util.logging.LoggingProxyImpl: sun.util.logging.LoggingProxy INSTANCE>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;43;isAccessible=true;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_L3: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;34;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_L3: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;35;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_L3: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;36;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_L3: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorImpl.<init>;48;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_L3: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorImpl.<init>;52;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_L4: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;34;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_L4: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;35;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_L4: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;36;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_L4: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorImpl.<init>;48;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_L4: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorImpl.<init>;52;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_LL: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;34;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_LL: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;35;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_LL: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;36;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_LL: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorImpl.<init>;48;isAccessible=false;
Field.getModifiers;<java.lang.invoke.BoundMethodHandle$Species_LL: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;sun.reflect.UnsafeFieldAccessorImpl.<init>;52;isAccessible=false;
Field.getModifiers;<java.util.logging.LoggingProxyImpl: sun.util.logging.LoggingProxy INSTANCE>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;34;isAccessible=true;
Field.getModifiers;<java.util.logging.LoggingProxyImpl: sun.util.logging.LoggingProxy INSTANCE>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;35;isAccessible=true;
Field.getModifiers;<java.util.logging.LoggingProxyImpl: sun.util.logging.LoggingProxy INSTANCE>;sun.reflect.UnsafeFieldAccessorFactory.newFieldAccessor;36;isAccessible=true;
Field.getModifiers;<java.util.logging.LoggingProxyImpl: sun.util.logging.LoggingProxy INSTANCE>;sun.reflect.UnsafeFieldAccessorImpl.<init>;48;isAccessible=true;
Field.getModifiers;<java.util.logging.LoggingProxyImpl: sun.util.logging.LoggingProxy INSTANCE>;sun.reflect.UnsafeFieldAccessorImpl.<init>;52;isAccessible=true;
Field.getName;<java.lang.invoke.BoundMethodHandle$Species_L3: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.lang.invoke.BoundMethodHandle$Species_L4: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.lang.invoke.BoundMethodHandle$Species_LL: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.lang.invoke.CallSite: java.lang.invoke.MethodHandle target>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.lang.invoke.MethodHandle: java.lang.invoke.LambdaForm form>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.lang.invoke.MethodHandle: java.lang.invoke.MethodType type>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.lang.invoke.MethodType: java.lang.Class rtype>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.lang.invoke.MethodType: java.lang.Class[] ptypes>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.lang.invoke.MethodType: long serialVersionUID>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.CopyOnWriteArrayList: java.util.concurrent.locks.ReentrantLock lock>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.CopyOnWriteArrayList: long serialVersionUID>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.atomic.AtomicBoolean: int value>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.atomic.AtomicBoolean: long serialVersionUID>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.atomic.AtomicBoolean: long valueOffset>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.atomic.AtomicBoolean: sun.misc.Unsafe unsafe>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.atomic.AtomicMarkableReference: java.util.concurrent.atomic.AtomicMarkableReference$Pair pair>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: int CANCELLED>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: int CONDITION>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: int PROPAGATE>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: int SIGNAL>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: int waitStatus>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node EXCLUSIVE>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node SHARED>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node next>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer$Node: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node prev>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer: int state>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node head>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer: java.util.concurrent.locks.AbstractQueuedSynchronizer$Node tail>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.concurrent.locks.AbstractQueuedSynchronizer: long serialVersionUID>;java.lang.Class.searchFields;;isAccessible=false;
Field.getName;<java.util.logging.LoggingProxyImpl: sun.util.logging.LoggingProxy INSTANCE>;java.lang.Class.searchFields;;isAccessible=false;
Field.set*;<java.lang.invoke.BoundMethodHandle$Species_L3: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;java.lang.invoke.BoundMethodHandle$Factory.setSpeciesDataToConcreteBMHClass;792;isAccessible=false;
Field.set*;<java.lang.invoke.BoundMethodHandle$Species_L4: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;java.lang.invoke.BoundMethodHandle$Factory.setSpeciesDataToConcreteBMHClass;792;isAccessible=false;
Field.set*;<java.lang.invoke.BoundMethodHandle$Species_LL: java.lang.invoke.BoundMethodHandle$SpeciesData SPECIES_DATA>;java.lang.invoke.BoundMethodHandle$Factory.setSpeciesDataToConcreteBMHClass;792;isAccessible=false;
Method.getDeclaringClass;<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>;sun.reflect.NativeMethodAccessorImpl.invoke;50;isAccessible=false;
Method.getDeclaringClass;<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>;sun.reflect.NativeMethodAccessorImpl.invoke;53;isAccessible=false;
Method.getModifiers;<Harness: void main(java.lang.String[])>;sun.launcher.LauncherHelper.validateMainClass;557;isAccessible=false;
Method.getModifiers;<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>;sun.reflect.NativeMethodAccessorImpl.invoke;58;isAccessible=false;
Method.getName;<Harness: void main(java.lang.String[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Object: boolean equals(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Object: int hashCode()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Object: java.lang.Class getClass()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Object: java.lang.String toString()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Object: void notify()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Object: void notifyAll()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Object: void wait()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Object: void wait(long)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Object: void wait(long,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: boolean holdsLock(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: boolean interrupted()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: boolean isAlive()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: boolean isDaemon()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: boolean isInterrupted()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: int activeCount()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: int countStackFrames()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: int enumerate(java.lang.Thread[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: int getPriority()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>;sun.reflect.NativeMethodAccessorImpl.invoke;54;isAccessible=false;
Method.getName;<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: java.lang.String getName()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: java.lang.String toString()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: java.lang.Thread currentThread()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: java.lang.Thread$State getState()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getDefaultUncaughtExceptionHandler()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: java.lang.Thread$UncaughtExceptionHandler getUncaughtExceptionHandler()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: java.lang.ThreadGroup getThreadGroup()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: java.util.Map getAllStackTraces()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: long getId()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void checkAccess()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void destroy()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void dumpStack()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void interrupt()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void join()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void join(long)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void join(long,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void resume()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void run()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void setDaemon(boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void setDefaultUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void setName(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void setPriority(int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void setUncaughtExceptionHandler(java.lang.Thread$UncaughtExceptionHandler)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void sleep(long)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void sleep(long,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void start()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void stop()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void stop(java.lang.Throwable)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void suspend()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Thread: void yield()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: int getStackTraceDepth()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: java.lang.StackTraceElement getStackTraceElement(int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: java.lang.StackTraceElement[] getOurStackTrace()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: java.lang.String getLocalizedMessage()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: java.lang.String getMessage()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: java.lang.String toString()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: java.lang.Throwable fillInStackTrace()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: java.lang.Throwable fillInStackTrace(int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: java.lang.Throwable getCause()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: java.lang.Throwable initCause(java.lang.Throwable)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: java.lang.Throwable[] getSuppressed()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: void addSuppressed(java.lang.Throwable)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: void printEnclosedStackTrace(java.lang.Throwable$PrintStreamOrWriter,java.lang.StackTraceElement[],java.lang.String,java.lang.String,java.util.Set)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: void printStackTrace()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: void printStackTrace(java.lang.Throwable$PrintStreamOrWriter)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: void readObject(java.io.ObjectInputStream)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.Throwable: void writeObject(java.io.ObjectOutputStream)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: boolean isInvokeSpecial()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.Class internalCallerClass()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.String internalProperties()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.BoundMethodHandle rebind()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.LambdaForm chooseDelegatingForm(java.lang.invoke.MethodHandle)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.LambdaForm makeReinvokerForm(java.lang.invoke.MethodHandle,int,java.lang.Object,java.lang.String,boolean,java.lang.invoke.LambdaForm$NamedFunction,java.lang.invoke.LambdaForm$NamedFunction)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.LambdaForm makeReinvokerForm(java.lang.invoke.MethodHandle,int,java.lang.Object,java.lang.invoke.LambdaForm$NamedFunction)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.MemberName internalMemberName()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.MethodHandle asTypeUncached(java.lang.invoke.MethodType)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.MethodHandle getTarget()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DelegatingMethodHandle: java.lang.invoke.MethodHandle getTarget()>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: boolean checkInitialized(java.lang.invoke.MemberName)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: boolean shouldBeInitialized(java.lang.invoke.MemberName)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: int afIndex(byte,boolean,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: int ftypeKind(java.lang.Class)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object allocateInstance(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object allocateInstance(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object checkBase(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object checkBase(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object checkCast(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object checkCast(java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object checkCast(java.lang.Object,java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object constructorMethod(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object constructorMethod(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object findDirectMethodHandle(java.lang.invoke.LambdaForm$Name)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object internalMemberName(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object internalMemberName(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object internalMemberNameEnsureInit(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object internalMemberNameEnsureInit(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object nullCheck(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object staticBase(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.Object staticBase(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.String internalProperties()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.BoundMethodHandle rebind()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(byte,java.lang.Class,java.lang.invoke.MemberName)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(java.lang.Class,java.lang.invoke.MemberName)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(java.lang.invoke.MemberName)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(java.lang.reflect.Field)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle make(java.lang.reflect.Method)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.DirectMethodHandle makeAllocator(java.lang.invoke.MemberName)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedFieldLambdaForm(byte,boolean,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm makePreparedLambdaForm(java.lang.invoke.MethodType,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm preparedFieldLambdaForm(byte,boolean,java.lang.Class)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm preparedFieldLambdaForm(java.lang.invoke.MemberName)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm preparedLambdaForm(java.lang.invoke.MemberName)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.LambdaForm preparedLambdaForm(java.lang.invoke.MethodType,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.MemberName internalMemberName()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: java.lang.invoke.MethodHandle copyWith(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: long fieldOffset(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: long fieldOffset(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: long staticOffset(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: long staticOffset(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: void ensureInitialized()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: void ensureInitialized(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: void ensureInitialized(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.DirectMethodHandle: void maybeCompile(java.lang.invoke.LambdaForm,java.lang.invoke.MemberName)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: boolean checkInvoker(java.lang.invoke.MethodHandle)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.Class impliedRestargType(java.lang.invoke.MethodType,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.Object checkGenericType(java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.Object checkGenericType(java.lang.Object,java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.Object getCallSiteTarget(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.Object getCallSiteTarget(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.String toString()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.LambdaForm callSiteForm(java.lang.invoke.MethodType,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.LambdaForm invokeHandleForm(java.lang.invoke.MethodType,boolean,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MemberName invokeBasicMethod(java.lang.invoke.MethodType)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MemberName linkToCallSiteMethod(java.lang.invoke.MethodType)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MemberName linkToTargetMethod(java.lang.invoke.MethodType)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MemberName methodHandleInvokeLinkerMethod(java.lang.String,java.lang.invoke.MethodType,java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MethodHandle basicInvoker()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MethodHandle cachedInvoker(int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MethodHandle exactInvoker()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MethodHandle genericInvoker()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MethodHandle makeExactOrGeneralInvoker(boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MethodHandle setCachedInvoker(int,java.lang.invoke.MethodHandle)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.MethodHandle spreadInvoker(int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: java.lang.invoke.WrongMethodTypeException newWrongMethodTypeException(java.lang.invoke.MethodType,java.lang.invoke.MethodType)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: void checkCustomized(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: void checkCustomized(java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: void checkExactType(java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: void checkExactType(java.lang.Object,java.lang.Object)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: void maybeCompileToBytecode(java.lang.invoke.MethodHandle)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.Invokers: void maybeCustomize(java.lang.invoke.MethodHandle)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: boolean assertCorrectArity(java.lang.invoke.MethodHandle,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: boolean profileBoolean(boolean,int[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: boolean profileBoolean(boolean,int[])>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: int countNonNull(java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.ClassCastException newClassCastException(java.lang.Class,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object castReference(java.lang.Class,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object copyAsPrimitiveArray(sun.invoke.util.Wrapper,java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object guardWithCatch(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle,java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object guardWithCatch(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle,java.lang.Object[])>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object valueConversion(java.lang.Class,java.lang.Class,boolean,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array(java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array(java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] array(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] computeValueConversions(java.lang.invoke.MethodType,java.lang.invoke.MethodType,boolean,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillArray(java.lang.Integer,java.lang.Object[],java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillArray(java.lang.Integer,java.lang.Object[],java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillArray(java.lang.Integer,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillArray(java.lang.Integer,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillArray(java.lang.Integer,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillArray(java.lang.Integer,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillArray(java.lang.Integer,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillArray(java.lang.Integer,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillArray(java.lang.Integer,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillArray(java.lang.Integer,java.lang.Object[],java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillNewArray(java.lang.Integer,java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] fillNewTypedArray(java.lang.Object[],java.lang.Integer,java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] identity(java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] makeArray(java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.Object[] prepend(java.lang.Object,java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.LambdaForm makeGuardWithCatchForm(java.lang.invoke.MethodType)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.LambdaForm makeGuardWithTestForm(java.lang.invoke.MethodType)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle bindCaller(java.lang.invoke.MethodHandle,java.lang.Class)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle buildArrayProducer(java.lang.Class)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle buildFiller(int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle buildVarargsArray(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle fakeMethodHandleInvoke(java.lang.invoke.MemberName)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle fillToRight(int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle findCollector(java.lang.String,int,java.lang.Class,java.lang.Class[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeArrayElementAccessor(java.lang.Class,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeBlockInlningWrapper(java.lang.invoke.MethodHandle)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeCollectArguments(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,int,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeGuardWithCatch(java.lang.invoke.MethodHandle,java.lang.Class,java.lang.invoke.MethodHandle)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeGuardWithTest(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeIntrinsic(java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandleImpl$Intrinsic)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeIntrinsic(java.lang.invoke.MethodType,java.lang.invoke.LambdaForm,java.lang.invoke.MethodHandleImpl$Intrinsic)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvert(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvert(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertByEditor(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makePairwiseConvertIndirect(java.lang.invoke.MethodHandle,java.lang.invoke.MethodType,boolean,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeSpreadArguments(java.lang.invoke.MethodHandle,java.lang.Class,int,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeVarargsCollector(java.lang.invoke.MethodHandle,java.lang.Class)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle makeWrappedMember(java.lang.invoke.MethodHandle,java.lang.invoke.MemberName,boolean)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle profile(java.lang.invoke.MethodHandle)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle selectAlternative(boolean,java.lang.invoke.MethodHandle,java.lang.invoke.MethodHandle)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle throwException(java.lang.invoke.MethodType)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle varargsArray(int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle varargsArray(java.lang.Class,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle[] access$000()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle[] access$100()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle[] makeArrays()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: java.lang.invoke.MethodHandle[] makeFillArrays()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: sun.invoke.empty.Empty throwException(java.lang.Throwable)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: sun.invoke.empty.Empty throwException(java.lang.Throwable)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: void assertSame(java.lang.Object,java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: void checkSpreadArgument(java.lang.Object,int)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: void checkSpreadArgument(java.lang.Object,int)>;java.lang.invoke.MemberName.<init>;540;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: void fillWithArguments(java.lang.Object[],int,java.lang.Object[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<java.lang.invoke.MethodHandleImpl: void initStatics()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageReaderSpi: boolean canDecodeInput(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageReaderSpi: boolean isOwnReader(javax.imageio.ImageReader)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageReaderSpi: java.lang.Class[] getInputTypes()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageReaderSpi: java.lang.String[] getImageWriterSpiNames()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageReaderSpi: javax.imageio.ImageReader createReaderInstance()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageReaderSpi: javax.imageio.ImageReader createReaderInstance(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageReaderWriterSpi: boolean isStandardImageMetadataFormatSupported()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageReaderWriterSpi: boolean isStandardStreamMetadataFormatSupported()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String getNativeImageMetadataFormatName()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String getNativeStreamMetadataFormatName()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String getPluginClassName()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraImageMetadataFormatNames()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getExtraStreamMetadataFormatNames()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFileSuffixes()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getFormatNames()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageReaderWriterSpi: java.lang.String[] getMIMETypes()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageReaderWriterSpi: javax.imageio.metadata.IIOMetadataFormat getImageMetadataFormat(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageReaderWriterSpi: javax.imageio.metadata.IIOMetadataFormat getStreamMetadataFormat(java.lang.String)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageWriterSpi: boolean canEncodeImage(java.awt.image.RenderedImage)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageWriterSpi: boolean canEncodeImage(javax.imageio.ImageTypeSpecifier)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageWriterSpi: boolean isFormatLossless()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageWriterSpi: boolean isOwnWriter(javax.imageio.ImageWriter)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageWriterSpi: java.lang.Class[] getOutputTypes()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageWriterSpi: java.lang.String[] getImageReaderSpiNames()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageWriterSpi: javax.imageio.ImageWriter createWriterInstance()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<javax.imageio.spi.ImageWriterSpi: javax.imageio.ImageWriter createWriterInstance(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.Log: boolean isDebugEnabled()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.Log: boolean isErrorEnabled()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.Log: boolean isFatalEnabled()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.Log: boolean isInfoEnabled()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.Log: boolean isTraceEnabled()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.Log: boolean isWarnEnabled()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.Log: void debug(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.Log: void error(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.Log: void fatal(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.Log: void fatal(java.lang.Object,java.lang.Throwable)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.Log: void info(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.Log: void info(java.lang.Object,java.lang.Throwable)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.Log: void trace(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.Log: void trace(java.lang.Object,java.lang.Throwable)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.Log: void warn(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.impl.Jdk14Logger: boolean isDebugEnabled()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.impl.Jdk14Logger: boolean isErrorEnabled()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.impl.Jdk14Logger: boolean isFatalEnabled()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.impl.Jdk14Logger: boolean isInfoEnabled()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.impl.Jdk14Logger: boolean isTraceEnabled()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.impl.Jdk14Logger: boolean isWarnEnabled()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.impl.Jdk14Logger: java.util.logging.Logger getLogger()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.impl.Jdk14Logger: void debug(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.impl.Jdk14Logger: void debug(java.lang.Object,java.lang.Throwable)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.impl.Jdk14Logger: void error(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.impl.Jdk14Logger: void error(java.lang.Object,java.lang.Throwable)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.impl.Jdk14Logger: void fatal(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.impl.Jdk14Logger: void fatal(java.lang.Object,java.lang.Throwable)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.impl.Jdk14Logger: void info(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.impl.Jdk14Logger: void info(java.lang.Object,java.lang.Throwable)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.impl.Jdk14Logger: void trace(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.impl.Jdk14Logger: void trace(java.lang.Object,java.lang.Throwable)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.impl.Jdk14Logger: void warn(java.lang.Object)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.commons.logging.impl.Jdk14Logger: void warn(java.lang.Object,java.lang.Throwable)>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.fop.cli.Main: boolean checkDependencies()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.fop.cli.Main: java.net.URL[] getJARList()>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.fop.cli.Main: void main(java.lang.String[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.fop.cli.Main: void startFOP(java.lang.String[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.getName;<org.apache.fop.cli.Main: void startFOPWithDynamicClasspath(java.lang.String[])>;java.lang.Class.searchMethods;;isAccessible=false;
Method.invoke;<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>;org.apache.commons.logging.LogFactory.getContextClassLoader;442;isAccessible=false;
Method.invoke;<org.apache.fop.cli.Main: void startFOP(java.lang.String[])>;org.dacapo.harness.Fop.iterate;41;isAccessible=false;
